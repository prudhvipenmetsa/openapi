openapi: 3.0.2
info:
  title: US Core Server CapabilityStatement - Patient API
  description: 'This Section describes the expected capabilities of the US Core Server actor which is responsible for providing responses to the queries submitted by the US Core Requestors. The complete list of FHIR profiles, RESTful operations, and search parameters supported by US Core Servers are defined. Systems implementing this capability statement should meet the ONC 2015 Common Clinical Data Set (CCDS) access requirement for Patient Selection 170.315(g)(7) and Application Access - Data Category Request 170.315(g)(8) and and the ONC [U.S. Core Data for Interoperability (USCDI)](https://www.healthit.gov/isa/sites/isa/files/2020-03/USCDI-Version1-2020-Final-Standard.pdf).  US Core Clients have the option of choosing from this list to access necessary data based on their local use cases and other contextual requirements.'
  license:
    name: Creative Commons Zero v1.0 Universal
    url: 'http://spdx.org/licenses/CC0-1.0.html'
  version: 3.1.1
  contact:
    name: HL7 International - US Realm Steering Committee
externalDocs:
  url: 'http://hl7.org/fhir/us/core/CapabilityStatement/us-core-server'
  description: FHIR CapabilityStatement
paths:
  /Patient:
    summary: Manager for resources of type Patient
    description: 'The Manager for resources of type Patient: provides services to manage the collection of all the Patient instances'
    get:
      summary: Search all resources of type Patient based on a set of criteria
      operationId: searchPatient
      responses:
        '200':
          description: the resource being returned
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Bundle'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/elements'
        - name: _id
          in: query
          schema:
            type: string
          description: |-
            Logical id of this artifact<br />
            <em>NOTE</em>: This US Core SearchParameter definition extends the usage context of
            <a href="http://hl7.org/fhir/R4/extension-capabilitystatement-expectation.html">capabilitystatement-expectation</a>
             extension to formally express implementer conformance expectations for these elements:<br />
             - multipleAnd<br />
             - multipleOr<br />
             - comparator<br />
             - modifier<br />
             - chain<br />

             
        - name: birthdate
          in: query
          schema:
            type: string
            pattern: '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?'
          description: |-
            The patient's date of birth<br />
            <em>NOTE</em>: This US Core SearchParameter definition extends the usage context of
            <a href="http://hl7.org/fhir/R4/extension-capabilitystatement-expectation.html">capabilitystatement-expectation</a>
             extension to formally express implementer conformance expectations for these elements:<br />
             - multipleAnd<br />
             - multipleOr<br />
             - comparator<br />
             - modifier<br />
             - chain<br />

             
        - name: family
          in: query
          schema:
            type: string
          description: |-
            A portion of the family name of the patient<br />
            <em>NOTE</em>: This US Core SearchParameter definition extends the usage context of
            <a href="http://hl7.org/fhir/R4/extension-capabilitystatement-expectation.html">capabilitystatement-expectation</a>
             extension to formally express implementer conformance expectations for these elements:<br />
             - multipleAnd<br />
             - multipleOr<br />
             - comparator<br />
             - modifier<br />
             - chain<br />

             
        - name: gender
          in: query
          schema:
            type: string
          description: |-
            Gender of the patient<br />
            <em>NOTE</em>: This US Core SearchParameter definition extends the usage context of
            <a href="http://hl7.org/fhir/R4/extension-capabilitystatement-expectation.html">capabilitystatement-expectation</a>
             extension to formally express implementer conformance expectations for these elements:<br />
             - multipleAnd<br />
             - multipleOr<br />
             - comparator<br />
             - modifier<br />
             - chain<br />

             
        - name: given
          in: query
          schema:
            type: string
          description: |-
            A portion of the given name of the patient<br />
            <em>NOTE</em>: This US Core SearchParameter definition extends the usage context of
            <a href="http://hl7.org/fhir/R4/extension-capabilitystatement-expectation.html">capabilitystatement-expectation</a>
             extension to formally express implementer conformance expectations for these elements:<br />
             - multipleAnd<br />
             - multipleOr<br />
             - comparator<br />
             - modifier<br />
             - chain<br />

             
        - name: identifier
          in: query
          schema:
            type: string
          description: |-
            A patient identifier<br />
            <em>NOTE</em>: This US Core SearchParameter definition extends the usage context of
            <a href="http://hl7.org/fhir/R4/extension-capabilitystatement-expectation.html">capabilitystatement-expectation</a>
             extension to formally express implementer conformance expectations for these elements:<br />
             - multipleAnd<br />
             - multipleOr<br />
             - comparator<br />
             - modifier<br />
             - chain<br />

             
        - name: name
          in: query
          schema:
            type: string
          description: |-
            A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text<br />
            <em>NOTE</em>: This US Core SearchParameter definition extends the usage context of
            <a href="http://hl7.org/fhir/R4/extension-capabilitystatement-expectation.html">capabilitystatement-expectation</a>
             extension to formally express implementer conformance expectations for these elements:<br />
             - multipleAnd<br />
             - multipleOr<br />
             - comparator<br />
             - modifier<br />
             - chain<br />

             
    post:
      summary: Create a new resource
      operationId: createPatient
      requestBody:
        description: The new state of the resource
        required: true
        content:
          application/fhir+json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: the resource being returned after being updated
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/elements'
  '/Patient/{rid}':
    summary: Read/Write/etc resource instance of type Patient
    description: Access to services to manage the state of a single resource of type Patient
    get:
      summary: Read the current state of the resource
      operationId: readPatient
      responses:
        '200':
          description: the resource being returned
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/elements'
    put:
      summary: Update the current state of the resource
      operationId: updatePatient
      requestBody:
        description: The new state of the resource
        required: true
        content:
          application/fhir+json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: the resource being returned after being updated
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/elements'
    patch:
      summary: Change the current state of the resource by providing a patch - a series of change commands
      operationId: patchPatient
      requestBody:
        description: The new state of the resource
        required: true
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Patient'
          application/fhir+json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: the resource being returned after being patched
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/elements'
    delete:
      summary: 'Delete the resource so that it no exists (no read, search etc)'
      operationId: deletePatient
      responses:
        '204':
          description: If the resource is deleted - no content is returned
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag
              schema:
                type: string
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/rid'
  '/Patient/{rid}/_history':
    summary: Read past versions of resource instance of type Patient
    description: Access to previous versions of a single resource of type Patient
    get:
      summary: Read the past states of the resource
      operationId: histinstPatient
      responses:
        '200':
          description: the resources being returned
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Bundle'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/elements'
        - $ref: '#/components/parameters/count'
        - name: _since
          in: query
          description: Only include resource versions that were created at or after the given instant in time
          schema:
            type: string
            pattern: '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?'
        - name: _at
          in: query
          description: Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)
          schema:
            type: string
            pattern: '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?'
        - name: _list
          in: query
          description: Only include resource versions that are referenced in the specified list (current list references are allowed)
          schema:
            type: string
  '/Patient/{rid}/_history/{hid}':
    summary: Read a past version of resource instance of type Patient
    description: Access a to specified previous version of a single resource of type Patient
    get:
      summary: Read a past state of the resource
      operationId: vreadPatient
      responses:
        '200':
          description: the resource being returned
          headers:
            ETag:
              description: Version from Resource.meta.version as a weak ETag for that version
              schema:
                type: string
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/rid'
        - $ref: '#/components/parameters/hid'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/elements'
  /Patient/_history:
    summary: Read past versions of resources of type Patient
    description: Access to previous versions of resourcez of type Patient
    get:
      summary: Read the past states of the resource
      operationId: histtypePatient
      responses:
        '200':
          description: the resources being returned
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/Bundle'
        default:
          description: 'Error, with details'
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      parameters:
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/elements'
        - $ref: '#/components/parameters/count'
        - name: _since
          in: query
          description: Only include resource versions that were created at or after the given instant in time
          schema:
            type: string
            pattern: '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?'
        - name: _at
          in: query
          description: Only include resource versions that were current at some point during the time period specified in the date time value (see Search notes on date searching)
          schema:
            type: string
            pattern: '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?'
        - name: _list
          in: query
          description: Only include resource versions that are referenced in the specified list (current list references are allowed)
          schema:
            type: string
components:
  schemas:
    ResourceList:
      oneOf:
        - $ref: '#/components/schemas/Account'
        - $ref: '#/components/schemas/ActivityDefinition'
        - $ref: '#/components/schemas/AdverseEvent'
        - $ref: '#/components/schemas/AllergyIntolerance'
#        - $ref: '#/components/schemas/Appointment'
#        - $ref: '#/components/schemas/AppointmentResponse'
#        - $ref: '#/components/schemas/AuditEvent'
        - $ref: '#/components/schemas/Basic'
        - $ref: '#/components/schemas/Binary'
#        - $ref: '#/components/schemas/BiologicallyDerivedProduct'
        - $ref: '#/components/schemas/BodyStructure'
        - $ref: '#/components/schemas/Bundle'
#        - $ref: '#/components/schemas/CapabilityStatement'
#        - $ref: '#/components/schemas/CarePlan'
#        - $ref: '#/components/schemas/CareTeam'
#        - $ref: '#/components/schemas/CatalogEntry'
#        - $ref: '#/components/schemas/ChargeItem'
#        - $ref: '#/components/schemas/ChargeItemDefinition'
#        - $ref: '#/components/schemas/Claim'
#        - $ref: '#/components/schemas/ClaimResponse'
#        - $ref: '#/components/schemas/ClinicalImpression'
        - $ref: '#/components/schemas/CodeSystem'
        - $ref: '#/components/schemas/Communication'
        - $ref: '#/components/schemas/CommunicationRequest'
#        - $ref: '#/components/schemas/CompartmentDefinition'
#        - $ref: '#/components/schemas/Composition'
#        - $ref: '#/components/schemas/ConceptMap'
#        - $ref: '#/components/schemas/Condition'
#        - $ref: '#/components/schemas/Consent'
#        - $ref: '#/components/schemas/Contract'
#        - $ref: '#/components/schemas/Coverage'
#        - $ref: '#/components/schemas/CoverageEligibilityRequest'
#        - $ref: '#/components/schemas/CoverageEligibilityResponse'
#        - $ref: '#/components/schemas/DetectedIssue'
#        - $ref: '#/components/schemas/Device'
#        - $ref: '#/components/schemas/DeviceDefinition'
##        - $ref: '#/components/schemas/DeviceMetric'
#        - $ref: '#/components/schemas/DeviceRequest'
#        - $ref: '#/components/schemas/DeviceUseStatement'
#        - $ref: '#/components/schemas/DiagnosticReport'
#        - $ref: '#/components/schemas/DocumentManifest'
#        - $ref: '#/components/schemas/DocumentReference'
#        - $ref: '#/components/schemas/EffectEvidenceSynthesis'
#        - $ref: '#/components/schemas/Encounter'
#        - $ref: '#/components/schemas/Endpoint'
##        - $ref: '#/components/schemas/EnrollmentRequest'
#        - $ref: '#/components/schemas/EnrollmentResponse'
#        - $ref: '#/components/schemas/EpisodeOfCare'
#        - $ref: '#/components/schemas/EventDefinition'
#        - $ref: '#/components/schemas/Evidence'
#        - $ref: '#/components/schemas/EvidenceVariable'
##        - $ref: '#/components/schemas/ExampleScenario'
#        - $ref: '#/components/schemas/ExplanationOfBenefit'
#        - $ref: '#/components/schemas/FamilyMemberHistory'
#        - $ref: '#/components/schemas/Flag'
#        - $ref: '#/components/schemas/Goal'
#        - $ref: '#/components/schemas/GraphDefinition'
#        - $ref: '#/components/schemas/Group'
#        - $ref: '#/components/schemas/GuidanceResponse'
#        - $ref: '#/components/schemas/HealthcareService'
#        - $ref: '#/components/schemas/ImagingStudy'
#        - $ref: '#/components/schemas/Immunization'
#        - $ref: '#/components/schemas/ImmunizationEvaluation'
#        - $ref: '#/components/schemas/ImmunizationRecommendation'
#        - $ref: '#/components/schemas/ImplementationGuide'
#        - $ref: '#/components/schemas/InsurancePlan'
#        - $ref: '#/components/schemas/Invoice'
#        - $ref: '#/components/schemas/Library'
#        - $ref: '#/components/schemas/Linkage'
##        - $ref: '#/components/schemas/List'
#        - $ref: '#/components/schemas/Location'
#        - $ref: '#/components/schemas/Measure'
#        - $ref: '#/components/schemas/MeasureReport'
#        - $ref: '#/components/schemas/Media'
#        - $ref: '#/components/schemas/Medication'
#        - $ref: '#/components/schemas/MedicationAdministration'
#        - $ref: '#/components/schemas/MedicationDispense'
#        - $ref: '#/components/schemas/MedicationKnowledge'
#        - $ref: '#/components/schemas/MedicationRequest'
##        - $ref: '#/components/schemas/MedicationStatement'
#        - $ref: '#/components/schemas/MedicinalProduct'
#        - $ref: '#/components/schemas/MedicinalProductAuthorization'
#        - $ref: '#/components/schemas/MedicinalProductContraindication'
#        - $ref: '#/components/schemas/MedicinalProductIndication'
##        - $ref: '#/components/schemas/MedicinalProductIngredient'
#        - $ref: '#/components/schemas/MedicinalProductInteraction'
#        - $ref: '#/components/schemas/MedicinalProductManufactured'
#        - $ref: '#/components/schemas/MedicinalProductPackaged'
#        - $ref: '#/components/schemas/MedicinalProductPharmaceutical'
#        - $ref: '#/components/schemas/MedicinalProductUndesirableEffect'
#        - $ref: '#/components/schemas/MessageDefinition'
#        - $ref: '#/components/schemas/MessageHeader'
#        - $ref: '#/components/schemas/MolecularSequence'
#        - $ref: '#/components/schemas/NamingSystem'
#        - $ref: '#/components/schemas/NutritionOrder'
#        - $ref: '#/components/schemas/Observation'
#        - $ref: '#/components/schemas/ObservationDefinition'
#        - $ref: '#/components/schemas/OperationDefinition'
        - $ref: '#/components/schemas/OperationOutcome'
#        - $ref: '#/components/schemas/Organization'
#        - $ref: '#/components/schemas/OrganizationAffiliation'
        - $ref: '#/components/schemas/Parameters'
        - $ref: '#/components/schemas/Patient'
        - $ref: '#/components/schemas/PaymentNotice'
        - $ref: '#/components/schemas/PaymentReconciliation'
#        - $ref: '#/components/schemas/Person'
#        - $ref: '#/components/schemas/PlanDefinition'
###        - $ref: '#/components/schemas/Practitioner'
##        - $ref: '#/components/schemas/PractitionerRole'
#        - $ref: '#/components/schemas/Procedure'
#        - $ref: '#/components/schemas/Provenance'
#        - $ref: '#/components/schemas/Questionnaire'
#        - $ref: '#/components/schemas/QuestionnaireResponse'
#        - $ref: '#/components/schemas/RelatedPerson'
#        - $ref: '#/components/schemas/RequestGroup'
#        - $ref: '#/components/schemas/ResearchDefinition'
#        - $ref: '#/components/schemas/ResearchElementDefinition'
#        - $ref: '#/components/schemas/ResearchStudy'
#        - $ref: '#/components/schemas/ResearchSubject'
#        - $ref: '#/components/schemas/RiskAssessment'
#        - $ref: '#/components/schemas/RiskEvidenceSynthesis'
#        - $ref: '#/components/schemas/Schedule'
#        - $ref: '#/components/schemas/SearchParameter'
#        - $ref: '#/components/schemas/ServiceRequest'
#        - $ref: '#/components/schemas/Slot'
#        - $ref: '#/components/schemas/Specimen'
#        - $ref: '#/components/schemas/SpecimenDefinition'
##        - $ref: '#/components/schemas/StructureDefinition'
#        - $ref: '#/components/schemas/StructureMap'
#        - $ref: '#/components/schemas/Subscription'
#        - $ref: '#/components/schemas/Substance'
#        - $ref: '#/components/schemas/SubstanceNucleicAcid'
#        - $ref: '#/components/schemas/SubstancePolymer'
#        - $ref: '#/components/schemas/SubstanceProtein'
#        - $ref: '#/components/schemas/SubstanceReferenceInformation'
#        - $ref: '#/components/schemas/SubstanceSourceMaterial'
#        - $ref: '#/components/schemas/SubstanceSpecification'
#        - $ref: '#/components/schemas/SupplyDelivery'
#        - $ref: '#/components/schemas/SupplyRequest'
#        - $ref: '#/components/schemas/Task'
#        - $ref: '#/components/schemas/TerminologyCapabilities'
##        - $ref: '#/components/schemas/TestReport'
#        - $ref: '#/components/schemas/TestScript'
#        - $ref: '#/components/schemas/ValueSet'
#        - $ref: '#/components/schemas/VerificationResult'
#        - $ref: '#/components/schemas/VisionPrescription'
    base64Binary:
      type: string
      description: A stream of bytes
    boolean:
      pattern: ^true|false$
      type: boolean
      description: Value of "true" or "false"
    canonical:
      pattern: ^\S*$
      type: string
      description: A URI that is a reference to a canonical URL on a FHIR resource
    code:
      pattern: '^[^\s]+(\s[^\s]+)*$'
      type: string
      description: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents
    date:
      pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
      type: string
      description: 'A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates.'
    dateTime:
      pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
      type: string
      description: 'A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates.'
    decimal:
      pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
      type: number
      description: A rational number with implicit precision
    id:
      pattern: '^[A-Za-z0-9\-\.]{1,64}$'
      type: string
      description: 'Any combination of letters, numerals, "-" and ".", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive.'
    instant:
      pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
      type: string
      description: An instant in time - known at least to the second
    integer:
      pattern: '^-?([0]|([1-9][0-9]*))$'
      type: number
      description: A whole number
    markdown:
      pattern: '^[ \r\n\t\S]+$'
      type: string
      description: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine
    oid:
      pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
      type: string
      description: An OID represented as a URI
    positiveInt:
      pattern: '^[1-9][0-9]*$'
      type: number
      description: An integer with a value that is positive (e.g. >0)
    string:
      pattern: '^[ \r\n\t\S]+$'
      type: string
      description: A sequence of Unicode characters
    time:
      pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
      type: string
      description: 'A time during the day, with no date specified'
    unsignedInt:
      pattern: '^[0]|([1-9][0-9]*)$'
      type: number
      description: An integer with a value that is not negative (e.g. >= 0)
    uri:
      pattern: ^\S*$
      type: string
      description: String of characters used to identify a name or a resource
    url:
      pattern: ^\S*$
      type: string
      description: A URI that is a literal reference
    uuid:
      pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      type: string
      description: 'A UUID, represented as a URI'
    xhtml:
      description: xhtml - escaped html (see specfication)
    Element:
      description: Base definition for all elements in a resource.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
      additionalProperties: false
    Extension:
      description: Optional Extension Element - found in all resources.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: Source of the definition for the extension code - a logical name or a URL.
          $ref: '#/components/schemas/uri'
        _url:
          description: Extensions for url
          $ref: '#/components/schemas/Element'
        valueBase64Binary:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          description: Extensions for valueBase64Binary
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          description: Extensions for valueBoolean
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: ^\S*$
          type: string
        _valueCanonical:
          description: Extensions for valueCanonical
          $ref: '#/components/schemas/Element'
        valueCode:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          description: Extensions for valueCode
          $ref: '#/components/schemas/Element'
        valueDate:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _valueDate:
          description: Extensions for valueDate
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _valueDateTime:
          description: Extensions for valueDateTime
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          description: Extensions for valueDecimal
          $ref: '#/components/schemas/Element'
        valueId:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          description: Extensions for valueId
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _valueInstant:
          description: Extensions for valueInstant
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          description: Extensions for valueInteger
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueMarkdown:
          description: Extensions for valueMarkdown
          $ref: '#/components/schemas/Element'
        valueOid:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _valueOid:
          description: Extensions for valueOid
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^[1-9][0-9]*$'
          type: number
        _valuePositiveInt:
          description: Extensions for valuePositiveInt
          $ref: '#/components/schemas/Element'
        valueString:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          description: Extensions for valueString
          $ref: '#/components/schemas/Element'
        valueTime:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          description: Extensions for valueTime
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _valueUnsignedInt:
          description: Extensions for valueUnsignedInt
          $ref: '#/components/schemas/Element'
        valueUri:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: ^\S*$
          type: string
        _valueUri:
          description: Extensions for valueUri
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: ^\S*$
          type: string
        _valueUrl:
          description: Extensions for valueUrl
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          type: string
        _valueUuid:
          description: Extensions for valueUuid
          $ref: '#/components/schemas/Element'
        valueAddress:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Address'
        valueAge:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Count'
        valueDistance:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Distance'
        valueDuration:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Money'
        valuePeriod:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Period'
        valueQuantity:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Range'
        valueRatio:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Ratio'
        valueReference:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Signature'
        valueTiming:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          description: 'Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).'
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    Narrative:
      description: A human-readable summary of the resource conveying the essential clinical and business information for the resource.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: 'The status of the narrative - whether it''s entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.'
          enum:
            - generated
            - extensions
            - additional
            - empty
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        div:
          description: 'The actual narrative content, a stripped down version of XHTML.'
          $ref: '#/components/schemas/xhtml'
      additionalProperties: false
      required:
        - div
    Annotation:
      description: A  text note which also  contains information about who made the statement and when.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        authorReference:
          description: The individual responsible for making the annotation.
          $ref: '#/components/schemas/Reference'
        authorString:
          description: The individual responsible for making the annotation.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _authorString:
          description: Extensions for authorString
          $ref: '#/components/schemas/Element'
        time:
          description: Indicates when this particular annotation was made.
          $ref: '#/components/schemas/dateTime'
        _time:
          description: Extensions for time
          $ref: '#/components/schemas/Element'
        text:
          description: The text of the annotation in markdown format.
          $ref: '#/components/schemas/markdown'
        _text:
          description: Extensions for text
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Attachment:
      description: For referring to data content defined in other formats.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentType:
          description: Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.
          $ref: '#/components/schemas/code'
        _contentType:
          description: Extensions for contentType
          $ref: '#/components/schemas/Element'
        language:
          description: The human language of the content. The value can be any valid value according to BCP 47.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        data:
          description: 'The actual data of the attachment - a sequence of bytes, base64 encoded.'
          $ref: '#/components/schemas/base64Binary'
        _data:
          description: Extensions for data
          $ref: '#/components/schemas/Element'
        url:
          description: A location where the data can be accessed.
          $ref: '#/components/schemas/url'
        _url:
          description: Extensions for url
          $ref: '#/components/schemas/Element'
        size:
          description: 'The number of bytes of data that make up this attachment (before base64 encoding, if that is done).'
          $ref: '#/components/schemas/unsignedInt'
        _size:
          description: Extensions for size
          $ref: '#/components/schemas/Element'
        hash:
          description: The calculated hash of the data using SHA-1. Represented using base64.
          $ref: '#/components/schemas/base64Binary'
        _hash:
          description: Extensions for hash
          $ref: '#/components/schemas/Element'
        title:
          description: A label or set of text to display in place of the data.
          $ref: '#/components/schemas/string'
        _title:
          description: Extensions for title
          $ref: '#/components/schemas/Element'
        creation:
          description: The date that the attachment was first created.
          $ref: '#/components/schemas/dateTime'
        _creation:
          description: Extensions for creation
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Identifier:
      description: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: The purpose of this identifier.
          enum:
            - usual
            - official
            - temp
            - secondary
            - old
        _use:
          description: Extensions for use
          $ref: '#/components/schemas/Element'
        type:
          description: A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
          $ref: '#/components/schemas/CodeableConcept'
        system:
          description: 'Establishes the namespace for the value - that is, a URL that describes a set values that are unique.'
          $ref: '#/components/schemas/uri'
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        value:
          description: The portion of the identifier typically relevant to the user and which is unique within the context of the system.
          $ref: '#/components/schemas/string'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        period:
          description: Time period during which identifier is/was valid for use.
          $ref: '#/components/schemas/Period'
        assigner:
          description: Organization that issued/manages the identifier.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    CodeableConcept:
      description: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        coding:
          description: A reference to a code defined by a terminology system.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        text:
          description: A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
          $ref: '#/components/schemas/string'
        _text:
          description: Extensions for text
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Coding:
      description: A reference to a code defined by a terminology system.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        system:
          description: The identification of the code system that defines the meaning of the symbol in the code.
          $ref: '#/components/schemas/uri'
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        version:
          description: 'The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.'
          $ref: '#/components/schemas/string'
        _version:
          description: Extensions for version
          $ref: '#/components/schemas/Element'
        code:
          description: A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
        display:
          description: 'A representation of the meaning of the code in the system, following the rules of the system.'
          $ref: '#/components/schemas/string'
        _display:
          description: Extensions for display
          $ref: '#/components/schemas/Element'
        userSelected:
          description: Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
          $ref: '#/components/schemas/boolean'
        _userSelected:
          description: Extensions for userSelected
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Quantity:
      description: 'A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: The value of the measured amount. The value includes an implicit precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        comparator:
          description: 'How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.'
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          description: Extensions for comparator
          $ref: '#/components/schemas/Element'
        unit:
          description: A human-readable form of the unit.
          $ref: '#/components/schemas/string'
        _unit:
          description: Extensions for unit
          $ref: '#/components/schemas/Element'
        system:
          description: The identification of the system that provides the coded form of the unit.
          $ref: '#/components/schemas/uri'
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        code:
          description: A computer processable form of the unit in some unit representation system.
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Duration:
      description: A length of time.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: The value of the measured amount. The value includes an implicit precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        comparator:
          description: 'How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.'
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          description: Extensions for comparator
          $ref: '#/components/schemas/Element'
        unit:
          description: A human-readable form of the unit.
          $ref: '#/components/schemas/string'
        _unit:
          description: Extensions for unit
          $ref: '#/components/schemas/Element'
        system:
          description: The identification of the system that provides the coded form of the unit.
          $ref: '#/components/schemas/uri'
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        code:
          description: A computer processable form of the unit in some unit representation system.
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Distance:
      description: A length - a value with a unit that is a physical distance.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: The value of the measured amount. The value includes an implicit precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        comparator:
          description: 'How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.'
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          description: Extensions for comparator
          $ref: '#/components/schemas/Element'
        unit:
          description: A human-readable form of the unit.
          $ref: '#/components/schemas/string'
        _unit:
          description: Extensions for unit
          $ref: '#/components/schemas/Element'
        system:
          description: The identification of the system that provides the coded form of the unit.
          $ref: '#/components/schemas/uri'
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        code:
          description: A computer processable form of the unit in some unit representation system.
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Count:
      description: 'A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: The value of the measured amount. The value includes an implicit precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        comparator:
          description: 'How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.'
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          description: Extensions for comparator
          $ref: '#/components/schemas/Element'
        unit:
          description: A human-readable form of the unit.
          $ref: '#/components/schemas/string'
        _unit:
          description: Extensions for unit
          $ref: '#/components/schemas/Element'
        system:
          description: The identification of the system that provides the coded form of the unit.
          $ref: '#/components/schemas/uri'
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        code:
          description: A computer processable form of the unit in some unit representation system.
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Money:
      description: An amount of economic utility in some recognized currency.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: Numerical value (with implicit precision).
          $ref: '#/components/schemas/decimal'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        currency:
          description: ISO 4217 Currency Code.
          $ref: '#/components/schemas/code'
        _currency:
          description: Extensions for currency
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Age:
      description: A duration of time during which an organism (or a process) has existed.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: The value of the measured amount. The value includes an implicit precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        comparator:
          description: 'How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.'
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          description: Extensions for comparator
          $ref: '#/components/schemas/Element'
        unit:
          description: A human-readable form of the unit.
          $ref: '#/components/schemas/string'
        _unit:
          description: Extensions for unit
          $ref: '#/components/schemas/Element'
        system:
          description: The identification of the system that provides the coded form of the unit.
          $ref: '#/components/schemas/uri'
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        code:
          description: A computer processable form of the unit in some unit representation system.
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Range:
      description: A set of ordered Quantities defined by a low and high limit.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        low:
          description: The low limit. The boundary is inclusive.
          $ref: '#/components/schemas/Quantity'
        high:
          description: The high limit. The boundary is inclusive.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Period:
      description: A time period defined by a start and end date and optionally time.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        start:
          description: The start of the period. The boundary is inclusive.
          $ref: '#/components/schemas/dateTime'
        _start:
          description: Extensions for start
          $ref: '#/components/schemas/Element'
        end:
          description: 'The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.'
          $ref: '#/components/schemas/dateTime'
        _end:
          description: Extensions for end
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Ratio:
      description: A relationship of two Quantity values - expressed as a numerator and a denominator.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        numerator:
          description: The value of the numerator.
          $ref: '#/components/schemas/Quantity'
        denominator:
          description: The value of the denominator.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Reference:
      description: A reference from one resource to another.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          description: 'A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with ''#'') refer to contained resources.'
          $ref: '#/components/schemas/string'
        _reference:
          description: Extensions for reference
          $ref: '#/components/schemas/Element'
        type:
          description: |-
            The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.

            The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).
          $ref: '#/components/schemas/uri'
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        identifier:
          description: 'An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.'
          $ref: '#/components/schemas/Identifier'
        display:
          description: Plain text narrative that identifies the resource in addition to the resource reference.
          $ref: '#/components/schemas/string'
        _display:
          description: Extensions for display
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SampledData:
      description: 'A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        origin:
          description: 'The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.'
          $ref: '#/components/schemas/Quantity'
        period:
          description: 'The length of time between sampling times, measured in milliseconds.'
          $ref: '#/components/schemas/decimal'
        _period:
          description: Extensions for period
          $ref: '#/components/schemas/Element'
        factor:
          description: A correction factor that is applied to the sampled data points before they are added to the origin.
          $ref: '#/components/schemas/decimal'
        _factor:
          description: Extensions for factor
          $ref: '#/components/schemas/Element'
        lowerLimit:
          description: The lower limit of detection of the measured points. This is needed if any of the data points have the value "L" (lower than detection limit).
          $ref: '#/components/schemas/decimal'
        _lowerLimit:
          description: Extensions for lowerLimit
          $ref: '#/components/schemas/Element'
        upperLimit:
          description: The upper limit of detection of the measured points. This is needed if any of the data points have the value "U" (higher than detection limit).
          $ref: '#/components/schemas/decimal'
        _upperLimit:
          description: Extensions for upperLimit
          $ref: '#/components/schemas/Element'
        dimensions:
          description: 'The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.'
          $ref: '#/components/schemas/positiveInt'
        _dimensions:
          description: Extensions for dimensions
          $ref: '#/components/schemas/Element'
        data:
          description: 'A series of data points which are decimal values separated by a single space (character u20). The special values "E" (error), "L" (below detection limit) and "U" (above detection limit) can also be used in place of a decimal value.'
          $ref: '#/components/schemas/string'
        _data:
          description: Extensions for data
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - origin
    Signature:
      description: 'A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        when:
          description: When the digital signature was signed.
          $ref: '#/components/schemas/instant'
        _when:
          description: Extensions for when
          $ref: '#/components/schemas/Element'
        who:
          description: A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).
          $ref: '#/components/schemas/Reference'
        onBehalfOf:
          description: A reference to an application-usable description of the identity that is represented by the signature.
          $ref: '#/components/schemas/Reference'
        targetFormat:
          description: A mime type that indicates the technical format of the target resources signed by the signature.
          $ref: '#/components/schemas/code'
        _targetFormat:
          description: Extensions for targetFormat
          $ref: '#/components/schemas/Element'
        sigFormat:
          description: 'A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.'
          $ref: '#/components/schemas/code'
        _sigFormat:
          description: Extensions for sigFormat
          $ref: '#/components/schemas/Element'
        data:
          description: The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.
          $ref: '#/components/schemas/base64Binary'
        _data:
          description: Extensions for data
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - type
        - who
    HumanName:
      description: A human's name with the ability to identify parts and usage.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: Identifies the purpose for this name.
          enum:
            - usual
            - official
            - temp
            - nickname
            - anonymous
            - old
            - maiden
        _use:
          description: Extensions for use
          $ref: '#/components/schemas/Element'
        text:
          description: Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.
          $ref: '#/components/schemas/string'
        _text:
          description: Extensions for text
          $ref: '#/components/schemas/Element'
        family:
          description: The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.
          $ref: '#/components/schemas/string'
        _family:
          description: Extensions for family
          $ref: '#/components/schemas/Element'
        given:
          description: Given name.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _given:
          description: Extensions for given
          items:
            $ref: '#/components/schemas/Element'
          type: array
        prefix:
          description: 'Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _prefix:
          description: Extensions for prefix
          items:
            $ref: '#/components/schemas/Element'
          type: array
        suffix:
          description: 'Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _suffix:
          description: Extensions for suffix
          items:
            $ref: '#/components/schemas/Element'
          type: array
        period:
          description: Indicates the period of time when this name was valid for the named person.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Address:
      description: An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: The purpose of this address.
          enum:
            - home
            - work
            - temp
            - old
            - billing
        _use:
          description: Extensions for use
          $ref: '#/components/schemas/Element'
        type:
          description: Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
          enum:
            - postal
            - physical
            - both
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        text:
          description: Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.
          $ref: '#/components/schemas/string'
        _text:
          description: Extensions for text
          $ref: '#/components/schemas/Element'
        line:
          description: 'This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _line:
          description: Extensions for line
          items:
            $ref: '#/components/schemas/Element'
          type: array
        city:
          description: 'The name of the city, town, suburb, village or other community or delivery center.'
          $ref: '#/components/schemas/string'
        _city:
          description: Extensions for city
          $ref: '#/components/schemas/Element'
        district:
          description: The name of the administrative area (county).
          $ref: '#/components/schemas/string'
        _district:
          description: Extensions for district
          $ref: '#/components/schemas/Element'
        state:
          description: Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).
          $ref: '#/components/schemas/string'
        _state:
          description: Extensions for state
          $ref: '#/components/schemas/Element'
        postalCode:
          description: A postal code designating a region defined by the postal service.
          $ref: '#/components/schemas/string'
        _postalCode:
          description: Extensions for postalCode
          $ref: '#/components/schemas/Element'
        country:
          description: Country - a nation as commonly understood or generally accepted.
          $ref: '#/components/schemas/string'
        _country:
          description: Extensions for country
          $ref: '#/components/schemas/Element'
        period:
          description: Time period when address was/is in use.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    ContactPoint:
      description: 'Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        system:
          description: Telecommunications form for contact point - what communications system is required to make use of the contact.
          enum:
            - phone
            - fax
            - email
            - pager
            - url
            - sms
            - other
        _system:
          description: Extensions for system
          $ref: '#/components/schemas/Element'
        value:
          description: 'The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).'
          $ref: '#/components/schemas/string'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
        use:
          description: Identifies the purpose for the contact point.
          enum:
            - home
            - work
            - temp
            - old
            - mobile
        _use:
          description: Extensions for use
          $ref: '#/components/schemas/Element'
        rank:
          description: Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.
          $ref: '#/components/schemas/positiveInt'
        _rank:
          description: Extensions for rank
          $ref: '#/components/schemas/Element'
        period:
          description: Time period when the contact point was/is in use.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Timing:
      description: 'Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        event:
          description: Identifies specific times when the event occurs.
          items:
            $ref: '#/components/schemas/dateTime'
          type: array
        _event:
          description: Extensions for event
          items:
            $ref: '#/components/schemas/Element'
          type: array
        repeat:
          description: A set of rules that describe when the event is scheduled.
          $ref: '#/components/schemas/Timing_Repeat'
        code:
          description: 'A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).'
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    Timing_Repeat:
      description: 'Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        boundsDuration:
          description: 'Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.'
          $ref: '#/components/schemas/Duration'
        boundsRange:
          description: 'Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.'
          $ref: '#/components/schemas/Range'
        boundsPeriod:
          description: 'Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.'
          $ref: '#/components/schemas/Period'
        count:
          description: 'A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.'
          $ref: '#/components/schemas/positiveInt'
        _count:
          description: Extensions for count
          $ref: '#/components/schemas/Element'
        countMax:
          description: 'If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.'
          $ref: '#/components/schemas/positiveInt'
        _countMax:
          description: Extensions for countMax
          $ref: '#/components/schemas/Element'
        duration:
          description: 'How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.'
          $ref: '#/components/schemas/decimal'
        _duration:
          description: Extensions for duration
          $ref: '#/components/schemas/Element'
        durationMax:
          description: 'If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.'
          $ref: '#/components/schemas/decimal'
        _durationMax:
          description: Extensions for durationMax
          $ref: '#/components/schemas/Element'
        durationUnit:
          description: 'The units of time for the duration, in UCUM units.'
          enum:
            - s
            - min
            - h
            - d
            - wk
            - mo
            - a
        _durationUnit:
          description: Extensions for durationUnit
          $ref: '#/components/schemas/Element'
        frequency:
          description: 'The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.'
          $ref: '#/components/schemas/positiveInt'
        _frequency:
          description: Extensions for frequency
          $ref: '#/components/schemas/Element'
        frequencyMax:
          description: 'If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.'
          $ref: '#/components/schemas/positiveInt'
        _frequencyMax:
          description: Extensions for frequencyMax
          $ref: '#/components/schemas/Element'
        period:
          description: 'Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.'
          $ref: '#/components/schemas/decimal'
        _period:
          description: Extensions for period
          $ref: '#/components/schemas/Element'
        periodMax:
          description: 'If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3-5 days.'
          $ref: '#/components/schemas/decimal'
        _periodMax:
          description: Extensions for periodMax
          $ref: '#/components/schemas/Element'
        periodUnit:
          description: The units of time for the period in UCUM units.
          enum:
            - s
            - min
            - h
            - d
            - wk
            - mo
            - a
        _periodUnit:
          description: Extensions for periodUnit
          $ref: '#/components/schemas/Element'
        dayOfWeek:
          description: 'If one or more days of week is provided, then the action happens only on the specified day(s).'
          items:
            $ref: '#/components/schemas/code'
          type: array
        _dayOfWeek:
          description: Extensions for dayOfWeek
          items:
            $ref: '#/components/schemas/Element'
          type: array
        timeOfDay:
          description: Specified time of day for action to take place.
          items:
            $ref: '#/components/schemas/time'
          type: array
        _timeOfDay:
          description: Extensions for timeOfDay
          items:
            $ref: '#/components/schemas/Element'
          type: array
        when:
          description: 'An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.'
          items:
            enum:
              - MORN
              - MORN.early
              - MORN.late
              - NOON
              - AFT
              - AFT.early
              - AFT.late
              - EVE
              - EVE.early
              - EVE.late
              - NIGHT
              - PHS
              - HS
              - WAKE
              - C
              - CM
              - CD
              - CV
              - AC
              - ACM
              - ACD
              - ACV
              - PC
              - PCM
              - PCD
              - PCV
          type: array
        _when:
          description: Extensions for when
          items:
            $ref: '#/components/schemas/Element'
          type: array
        offset:
          description: 'The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.'
          $ref: '#/components/schemas/unsignedInt'
        _offset:
          description: Extensions for offset
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Meta:
      description: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        versionId:
          description: 'The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.'
          $ref: '#/components/schemas/id'
        _versionId:
          description: Extensions for versionId
          $ref: '#/components/schemas/Element'
        lastUpdated:
          description: When the resource last changed - e.g. when the version changed.
          $ref: '#/components/schemas/instant'
        _lastUpdated:
          description: Extensions for lastUpdated
          $ref: '#/components/schemas/Element'
        source:
          description: 'A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.'
          $ref: '#/components/schemas/uri'
        _source:
          description: Extensions for source
          $ref: '#/components/schemas/Element'
        profile:
          description: 'A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].'
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        security:
          description: Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        tag:
          description: 'Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.'
          items:
            $ref: '#/components/schemas/Coding'
          type: array
      additionalProperties: false
    ContactDetail:
      description: Specifies contact information for a person or organization.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: The name of an individual to contact.
          $ref: '#/components/schemas/string'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        telecom:
          description: The contact details for the individual (if a name was provided) or the organization.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
      additionalProperties: false
    Contributor:
      description: 'A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of contributor.
          enum:
            - author
            - editor
            - reviewer
            - endorser
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        name:
          description: The name of the individual or organization responsible for the contribution.
          $ref: '#/components/schemas/string'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        contact:
          description: Contact details to assist a user in finding and communicating with the contributor.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
      additionalProperties: false
    DataRequirement:
      description: 'Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: 'The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.'
          $ref: '#/components/schemas/code'
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        profile:
          description: 'The profile of the required data, specified as the uri of the profile definition.'
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        subjectCodeableConcept:
          description: 'The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.'
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: 'The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.'
          $ref: '#/components/schemas/Reference'
        mustSupport:
          description: |-
            Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. 

            The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).
          items:
            $ref: '#/components/schemas/string'
          type: array
        _mustSupport:
          description: Extensions for mustSupport
          items:
            $ref: '#/components/schemas/Element'
          type: array
        codeFilter:
          description: 'Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND''ed, not OR''ed.'
          items:
            $ref: '#/components/schemas/DataRequirement_CodeFilter'
          type: array
        dateFilter:
          description: 'Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND''ed, not OR''ed.'
          items:
            $ref: '#/components/schemas/DataRequirement_DateFilter'
          type: array
        limit:
          description: Specifies a maximum number of results that are required (uses the _count search parameter).
          $ref: '#/components/schemas/positiveInt'
        _limit:
          description: Extensions for limit
          $ref: '#/components/schemas/Element'
        sort:
          description: Specifies the order of the results to be returned.
          items:
            $ref: '#/components/schemas/DataRequirement_Sort'
          type: array
      additionalProperties: false
    DataRequirement_CodeFilter:
      description: 'Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: 'The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.'
          $ref: '#/components/schemas/string'
        _path:
          description: Extensions for path
          $ref: '#/components/schemas/Element'
        searchParam:
          description: 'A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.'
          $ref: '#/components/schemas/string'
        _searchParam:
          description: Extensions for searchParam
          $ref: '#/components/schemas/Element'
        valueSet:
          description: 'The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.'
          $ref: '#/components/schemas/canonical'
        code:
          description: 'The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.'
          items:
            $ref: '#/components/schemas/Coding'
          type: array
      additionalProperties: false
    DataRequirement_DateFilter:
      description: 'Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: 'The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing.'
          $ref: '#/components/schemas/string'
        _path:
          description: Extensions for path
          $ref: '#/components/schemas/Element'
        searchParam:
          description: 'A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.'
          $ref: '#/components/schemas/string'
        _searchParam:
          description: Extensions for searchParam
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: 'The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _valueDateTime:
          description: Extensions for valueDateTime
          $ref: '#/components/schemas/Element'
        valuePeriod:
          description: 'The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.'
          $ref: '#/components/schemas/Period'
        valueDuration:
          description: 'The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.'
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
    DataRequirement_Sort:
      description: 'Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: 'The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.'
          $ref: '#/components/schemas/string'
        _path:
          description: Extensions for path
          $ref: '#/components/schemas/Element'
        direction:
          description: 'The direction of the sort, ascending or descending.'
          enum:
            - ascending
            - descending
        _direction:
          description: Extensions for direction
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ParameterDefinition:
      description: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: The name of the parameter used to allow access to the value of the parameter in evaluation contexts.
          $ref: '#/components/schemas/code'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        use:
          description: Whether the parameter is input or output for the module.
          $ref: '#/components/schemas/code'
        _use:
          description: Extensions for use
          $ref: '#/components/schemas/Element'
        min:
          description: The minimum number of times this parameter SHALL appear in the request or response.
          $ref: '#/components/schemas/integer'
        _min:
          description: Extensions for min
          $ref: '#/components/schemas/Element'
        max:
          description: The maximum number of times this element is permitted to appear in the request or response.
          $ref: '#/components/schemas/string'
        _max:
          description: Extensions for max
          $ref: '#/components/schemas/Element'
        documentation:
          description: A brief discussion of what the parameter is for and how it is used by the module.
          $ref: '#/components/schemas/string'
        _documentation:
          description: Extensions for documentation
          $ref: '#/components/schemas/Element'
        type:
          description: The type of the parameter.
          $ref: '#/components/schemas/code'
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        profile:
          description: 'If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.'
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    RelatedArtifact:
      description: 'Related artifacts such as additional documentation, justification, or bibliographic references.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of relationship to the related artifact.
          enum:
            - documentation
            - justification
            - citation
            - predecessor
            - successor
            - derived-from
            - depends-on
            - composed-of
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        label:
          description: 'A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.'
          $ref: '#/components/schemas/string'
        _label:
          description: Extensions for label
          $ref: '#/components/schemas/Element'
        display:
          description: 'A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.'
          $ref: '#/components/schemas/string'
        _display:
          description: Extensions for display
          $ref: '#/components/schemas/Element'
        citation:
          description: A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.
          $ref: '#/components/schemas/markdown'
        _citation:
          description: Extensions for citation
          $ref: '#/components/schemas/Element'
        url:
          description: A url for the artifact that can be followed to access the actual content.
          $ref: '#/components/schemas/url'
        _url:
          description: Extensions for url
          $ref: '#/components/schemas/Element'
        document:
          description: 'The document being referenced, represented as an attachment. This is exclusive with the resource element.'
          $ref: '#/components/schemas/Attachment'
        resource:
          description: 'The related resource, such as a library, value set, profile, or other knowledge resource.'
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    TriggerDefinition:
      description: 'A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of triggering event.
          enum:
            - named-event
            - periodic
            - data-changed
            - data-added
            - data-modified
            - data-removed
            - data-accessed
            - data-access-ended
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        name:
          description: 'A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.'
          $ref: '#/components/schemas/string'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        timingTiming:
          description: The timing of the event (if this is a periodic trigger).
          $ref: '#/components/schemas/Timing'
        timingReference:
          description: The timing of the event (if this is a periodic trigger).
          $ref: '#/components/schemas/Reference'
        timingDate:
          description: The timing of the event (if this is a periodic trigger).
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _timingDate:
          description: Extensions for timingDate
          $ref: '#/components/schemas/Element'
        timingDateTime:
          description: The timing of the event (if this is a periodic trigger).
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _timingDateTime:
          description: Extensions for timingDateTime
          $ref: '#/components/schemas/Element'
        data:
          description: 'The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.'
          items:
            $ref: '#/components/schemas/DataRequirement'
          type: array
        condition:
          description: A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
    UsageContext:
      description: 'Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: A code that identifies the type of context being specified by this usage context.
          $ref: '#/components/schemas/Coding'
        valueCodeableConcept:
          description: A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          description: A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/Range'
        valueReference:
          description: A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
    Dosage:
      description: Indicates how the medication is/was taken or should be taken by the patient.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          description: Indicates the order in which the dosage instructions should be applied or interpreted.
          $ref: '#/components/schemas/integer'
        _sequence:
          description: Extensions for sequence
          $ref: '#/components/schemas/Element'
        text:
          description: Free text dosage instructions e.g. SIG.
          $ref: '#/components/schemas/string'
        _text:
          description: Extensions for text
          $ref: '#/components/schemas/Element'
        additionalInstruction:
          description: Supplemental instructions to the patient on how to take the medication  (e.g. "with meals" or"take half to one hour before food") or warnings for the patient about the medication (e.g. "may cause drowsiness" or "avoid exposure of skin to direct sunlight or sunlamps").
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        patientInstruction:
          description: Instructions in terms that are understood by the patient or consumer.
          $ref: '#/components/schemas/string'
        _patientInstruction:
          description: Extensions for patientInstruction
          $ref: '#/components/schemas/Element'
        timing:
          description: When medication should be administered.
          $ref: '#/components/schemas/Timing'
        asNeededBoolean:
          description: 'Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).'
          pattern: ^true|false$
          type: boolean
        _asNeededBoolean:
          description: Extensions for asNeededBoolean
          $ref: '#/components/schemas/Element'
        asNeededCodeableConcept:
          description: 'Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).'
          $ref: '#/components/schemas/CodeableConcept'
        site:
          description: Body site to administer to.
          $ref: '#/components/schemas/CodeableConcept'
        route:
          description: How drug should enter body.
          $ref: '#/components/schemas/CodeableConcept'
        method:
          description: Technique for administering medication.
          $ref: '#/components/schemas/CodeableConcept'
        doseAndRate:
          description: The amount of medication administered.
          items:
            $ref: '#/components/schemas/Dosage_DoseAndRate'
          type: array
        maxDosePerPeriod:
          description: Upper limit on medication per unit of time.
          $ref: '#/components/schemas/Ratio'
        maxDosePerAdministration:
          description: Upper limit on medication per administration.
          $ref: '#/components/schemas/Quantity'
        maxDosePerLifetime:
          description: Upper limit on medication per lifetime of the patient.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Dosage_DoseAndRate:
      description: Indicates how the medication is/was taken or should be taken by the patient.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: 'The kind of dose or rate specified, for example, ordered or calculated.'
          $ref: '#/components/schemas/CodeableConcept'
        doseRange:
          description: Amount of medication per dose.
          $ref: '#/components/schemas/Range'
        doseQuantity:
          description: Amount of medication per dose.
          $ref: '#/components/schemas/Quantity'
        rateRatio:
          description: Amount of medication per unit of time.
          $ref: '#/components/schemas/Ratio'
        rateRange:
          description: Amount of medication per unit of time.
          $ref: '#/components/schemas/Range'
        rateQuantity:
          description: Amount of medication per unit of time.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Population:
      description: A populatioof people with some set of grouping criteria.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        ageRange:
          description: The age of the specific population.
          $ref: '#/components/schemas/Range'
        ageCodeableConcept:
          description: The age of the specific population.
          $ref: '#/components/schemas/CodeableConcept'
        gender:
          description: The gender of the specific population.
          $ref: '#/components/schemas/CodeableConcept'
        race:
          description: Race of the specific population.
          $ref: '#/components/schemas/CodeableConcept'
        physiologicalCondition:
          description: The existing physiological conditions of the specific population to which this applies.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ProductShelfLife:
      description: The shelf-life and storage information for a medicinal product item or container can be described using this class.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique identifier for the packaged Medicinal Product.
          $ref: '#/components/schemas/Identifier'
        type:
          description: 'This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.'
          $ref: '#/components/schemas/CodeableConcept'
        period:
          description: The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
          $ref: '#/components/schemas/Quantity'
        specialPrecautionsForStorage:
          description: 'Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - period
        - type
    ProdCharacteristic:
      description: The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        height:
          description: 'Where applicable, the height can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.'
          $ref: '#/components/schemas/Quantity'
        width:
          description: 'Where applicable, the width can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.'
          $ref: '#/components/schemas/Quantity'
        depth:
          description: 'Where applicable, the depth can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.'
          $ref: '#/components/schemas/Quantity'
        weight:
          description: 'Where applicable, the weight can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.'
          $ref: '#/components/schemas/Quantity'
        nominalVolume:
          description: 'Where applicable, the nominal volume can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.'
          $ref: '#/components/schemas/Quantity'
        externalDiameter:
          description: 'Where applicable, the external diameter can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.'
          $ref: '#/components/schemas/Quantity'
        shape:
          description: 'Where applicable, the shape can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.'
          $ref: '#/components/schemas/string'
        _shape:
          description: Extensions for shape
          $ref: '#/components/schemas/Element'
        color:
          description: 'Where applicable, the color can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _color:
          description: Extensions for color
          items:
            $ref: '#/components/schemas/Element'
          type: array
        imprint:
          description: 'Where applicable, the imprint can be specified as text.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _imprint:
          description: Extensions for imprint
          items:
            $ref: '#/components/schemas/Element'
          type: array
        image:
          description: 'Where applicable, the image can be provided The format of the image attachment shall be specified by regional implementations.'
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        scoring:
          description: 'Where applicable, the scoring can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.'
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    MarketingStatus:
      description: The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        country:
          description: The country in which the marketing authorisation has been granted shall be specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code elements.
          $ref: '#/components/schemas/CodeableConcept'
        jurisdiction:
          description: 'Where a Medicines Regulatory Agency has granted a marketing authorisation for which specific provisions within a jurisdiction apply, the jurisdiction can be specified using an appropriate controlled terminology The controlled term and the controlled term identifier shall be specified.'
          $ref: '#/components/schemas/CodeableConcept'
        status:
          description: This attribute provides information on the status of the marketing of the medicinal product See ISO/TS 20443 for more information and examples.
          $ref: '#/components/schemas/CodeableConcept'
        dateRange:
          description: 'The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.'
          $ref: '#/components/schemas/Period'
        restoreDate:
          description: 'The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.'
          $ref: '#/components/schemas/dateTime'
        _restoreDate:
          description: Extensions for restoreDate
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - country
        - dateRange
        - status
    SubstanceAmount:
      description: 'Chemical substances are a single substance type whose primary defining element is the molecular structure. Chemical substances shall be defined on the basis of their complete covalent molecular structure; the presence of a salt (counter-ion) and/or solvates (water, alcohols) is also captured. Purity, grade, physical form or particle size are not taken into account in the definition of a chemical substance or in the assignment of a Substance ID.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        amountQuantity:
          description: 'Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.'
          $ref: '#/components/schemas/Quantity'
        amountRange:
          description: 'Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.'
          $ref: '#/components/schemas/Range'
        amountString:
          description: 'Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _amountString:
          description: Extensions for amountString
          $ref: '#/components/schemas/Element'
        amountType:
          description: 'Most elements that require a quantitative value will also have a field called amount type. Amount type should always be specified because the actual value of the amount is often dependent on it. EXAMPLE: In capturing the actual relative amounts of substances or molecular fragments it is essential to indicate whether the amount refers to a mole ratio or weight ratio. For any given element an effort should be made to use same the amount type for all related definitional elements.'
          $ref: '#/components/schemas/CodeableConcept'
        amountText:
          description: A textual comment on a numeric value.
          $ref: '#/components/schemas/string'
        _amountText:
          description: Extensions for amountText
          $ref: '#/components/schemas/Element'
        referenceRange:
          description: Reference range of possible or expected values.
          $ref: '#/components/schemas/SubstanceAmount_ReferenceRange'
      additionalProperties: false
    SubstanceAmount_ReferenceRange:
      description: 'Chemical substances are a single substance type whose primary defining element is the molecular structure. Chemical substances shall be defined on the basis of their complete covalent molecular structure; the presence of a salt (counter-ion) and/or solvates (water, alcohols) is also captured. Purity, grade, physical form or particle size are not taken into account in the definition of a chemical substance or in the assignment of a Substance ID.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        lowLimit:
          description: Lower limit possible or expected.
          $ref: '#/components/schemas/Quantity'
        highLimit:
          description: Upper limit possible or expected.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Expression:
      description: 'A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: 'A brief, natural language description of the condition that effectively communicates the intended semantics.'
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        name:
          description: A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.
          $ref: '#/components/schemas/id'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        language:
          description: The media type of the language for the expression.
          enum:
            - text/cql
            - text/fhirpath
            - application/x-fhir-query
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        expression:
          description: An expression in the specified language that returns a value.
          $ref: '#/components/schemas/string'
        _expression:
          description: Extensions for expression
          $ref: '#/components/schemas/Element'
        reference:
          description: A URI that defines where the expression is found.
          $ref: '#/components/schemas/uri'
        _reference:
          description: Extensions for reference
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: 'The path identifies the element and is expressed as a "."-separated list of ancestor elements, beginning with the name of the resource or extension.'
          $ref: '#/components/schemas/string'
        _path:
          description: Extensions for path
          $ref: '#/components/schemas/Element'
        representation:
          description: 'Codes that define how this element is represented in instances, when the deviation varies from the normal case.'
          items:
            enum:
              - xmlAttr
              - xmlText
              - typeAttr
              - cdaText
              - xhtml
          type: array
        _representation:
          description: Extensions for representation
          items:
            $ref: '#/components/schemas/Element'
          type: array
        sliceName:
          description: 'The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element.'
          $ref: '#/components/schemas/string'
        _sliceName:
          description: Extensions for sliceName
          $ref: '#/components/schemas/Element'
        sliceIsConstraining:
          description: 'If true, indicates that this slice definition is constraining a slice definition with the same name in an inherited profile. If false, the slice is not overriding any slice in an inherited profile. If missing, the slice might or might not be overriding a slice in an inherited profile, depending on the sliceName.'
          $ref: '#/components/schemas/boolean'
        _sliceIsConstraining:
          description: Extensions for sliceIsConstraining
          $ref: '#/components/schemas/Element'
        label:
          description: A single preferred label which is the text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.
          $ref: '#/components/schemas/string'
        _label:
          description: Extensions for label
          $ref: '#/components/schemas/Element'
        code:
          description: A code that has the same meaning as the element in a particular terminology.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        slicing:
          description: 'Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).'
          $ref: '#/components/schemas/ElementDefinition_Slicing'
        short:
          description: A concise description of what this element means (e.g. for use in autogenerated summaries).
          $ref: '#/components/schemas/string'
        _short:
          description: Extensions for short
          $ref: '#/components/schemas/Element'
        definition:
          description: 'Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource. (Note: The text you are reading is specified in ElementDefinition.definition).'
          $ref: '#/components/schemas/markdown'
        _definition:
          description: Extensions for definition
          $ref: '#/components/schemas/Element'
        comment:
          description: 'Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc. (Note: The text you are reading is specified in ElementDefinition.comment).'
          $ref: '#/components/schemas/markdown'
        _comment:
          description: Extensions for comment
          $ref: '#/components/schemas/Element'
        requirements:
          description: This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.
          $ref: '#/components/schemas/markdown'
        _requirements:
          description: Extensions for requirements
          $ref: '#/components/schemas/Element'
        alias:
          description: Identifies additional names by which this element might also be known.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _alias:
          description: Extensions for alias
          items:
            $ref: '#/components/schemas/Element'
          type: array
        min:
          description: The minimum number of times this element SHALL appear in the instance.
          $ref: '#/components/schemas/unsignedInt'
        _min:
          description: Extensions for min
          $ref: '#/components/schemas/Element'
        max:
          description: The maximum number of times this element is permitted to appear in the instance.
          $ref: '#/components/schemas/string'
        _max:
          description: Extensions for max
          $ref: '#/components/schemas/Element'
        base:
          description: 'Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same.'
          $ref: '#/components/schemas/ElementDefinition_Base'
        contentReference:
          description: 'Identifies an element defined elsewhere in the definition whose content rules should be applied to the current element. ContentReferences bring across all the rules that are in the ElementDefinition for the element, including definitions, cardinality constraints, bindings, invariants etc.'
          $ref: '#/components/schemas/uri'
        _contentReference:
          description: Extensions for contentReference
          $ref: '#/components/schemas/Element'
        type:
          description: The data type or resource that the value of this element is permitted to be.
          items:
            $ref: '#/components/schemas/ElementDefinition_Type'
          type: array
        defaultValueBase64Binary:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _defaultValueBase64Binary:
          description: Extensions for defaultValueBase64Binary
          $ref: '#/components/schemas/Element'
        defaultValueBoolean:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: ^true|false$
          type: boolean
        _defaultValueBoolean:
          description: Extensions for defaultValueBoolean
          $ref: '#/components/schemas/Element'
        defaultValueCanonical:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: ^\S*$
          type: string
        _defaultValueCanonical:
          description: Extensions for defaultValueCanonical
          $ref: '#/components/schemas/Element'
        defaultValueCode:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _defaultValueCode:
          description: Extensions for defaultValueCode
          $ref: '#/components/schemas/Element'
        defaultValueDate:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _defaultValueDate:
          description: Extensions for defaultValueDate
          $ref: '#/components/schemas/Element'
        defaultValueDateTime:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _defaultValueDateTime:
          description: Extensions for defaultValueDateTime
          $ref: '#/components/schemas/Element'
        defaultValueDecimal:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _defaultValueDecimal:
          description: Extensions for defaultValueDecimal
          $ref: '#/components/schemas/Element'
        defaultValueId:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _defaultValueId:
          description: Extensions for defaultValueId
          $ref: '#/components/schemas/Element'
        defaultValueInstant:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _defaultValueInstant:
          description: Extensions for defaultValueInstant
          $ref: '#/components/schemas/Element'
        defaultValueInteger:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _defaultValueInteger:
          description: Extensions for defaultValueInteger
          $ref: '#/components/schemas/Element'
        defaultValueMarkdown:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _defaultValueMarkdown:
          description: Extensions for defaultValueMarkdown
          $ref: '#/components/schemas/Element'
        defaultValueOid:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _defaultValueOid:
          description: Extensions for defaultValueOid
          $ref: '#/components/schemas/Element'
        defaultValuePositiveInt:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^[1-9][0-9]*$'
          type: number
        _defaultValuePositiveInt:
          description: Extensions for defaultValuePositiveInt
          $ref: '#/components/schemas/Element'
        defaultValueString:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _defaultValueString:
          description: Extensions for defaultValueString
          $ref: '#/components/schemas/Element'
        defaultValueTime:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _defaultValueTime:
          description: Extensions for defaultValueTime
          $ref: '#/components/schemas/Element'
        defaultValueUnsignedInt:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _defaultValueUnsignedInt:
          description: Extensions for defaultValueUnsignedInt
          $ref: '#/components/schemas/Element'
        defaultValueUri:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: ^\S*$
          type: string
        _defaultValueUri:
          description: Extensions for defaultValueUri
          $ref: '#/components/schemas/Element'
        defaultValueUrl:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: ^\S*$
          type: string
        _defaultValueUrl:
          description: Extensions for defaultValueUrl
          $ref: '#/components/schemas/Element'
        defaultValueUuid:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          type: string
        _defaultValueUuid:
          description: Extensions for defaultValueUuid
          $ref: '#/components/schemas/Element'
        defaultValueAddress:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Address'
        defaultValueAge:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Age'
        defaultValueAnnotation:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Annotation'
        defaultValueAttachment:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Attachment'
        defaultValueCodeableConcept:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/CodeableConcept'
        defaultValueCoding:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Coding'
        defaultValueContactPoint:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/ContactPoint'
        defaultValueCount:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Count'
        defaultValueDistance:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Distance'
        defaultValueDuration:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Duration'
        defaultValueHumanName:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/HumanName'
        defaultValueIdentifier:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Identifier'
        defaultValueMoney:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Money'
        defaultValuePeriod:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Period'
        defaultValueQuantity:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Quantity'
        defaultValueRange:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Range'
        defaultValueRatio:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Ratio'
        defaultValueReference:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Reference'
        defaultValueSampledData:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/SampledData'
        defaultValueSignature:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Signature'
        defaultValueTiming:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Timing'
        defaultValueContactDetail:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/ContactDetail'
        defaultValueContributor:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Contributor'
        defaultValueDataRequirement:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/DataRequirement'
        defaultValueExpression:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Expression'
        defaultValueParameterDefinition:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/ParameterDefinition'
        defaultValueRelatedArtifact:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/RelatedArtifact'
        defaultValueTriggerDefinition:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/TriggerDefinition'
        defaultValueUsageContext:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/UsageContext'
        defaultValueDosage:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Dosage'
        defaultValueMeta:
          description: 'The value that should be used if there is no value stated in the instance (e.g. ''if not otherwise specified, the abstract is false'').'
          $ref: '#/components/schemas/Meta'
        meaningWhenMissing:
          description: 'The Implicit meaning that is to be understood when this element is missing (e.g. ''when this element is missing, the period is ongoing'').'
          $ref: '#/components/schemas/markdown'
        _meaningWhenMissing:
          description: Extensions for meaningWhenMissing
          $ref: '#/components/schemas/Element'
        orderMeaning:
          description: 'If present, indicates that the order of the repeating element has meaning and describes what that meaning is.  If absent, it means that the order of the element has no meaning.'
          $ref: '#/components/schemas/string'
        _orderMeaning:
          description: Extensions for orderMeaning
          $ref: '#/components/schemas/Element'
        fixedBase64Binary:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _fixedBase64Binary:
          description: Extensions for fixedBase64Binary
          $ref: '#/components/schemas/Element'
        fixedBoolean:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: ^true|false$
          type: boolean
        _fixedBoolean:
          description: Extensions for fixedBoolean
          $ref: '#/components/schemas/Element'
        fixedCanonical:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: ^\S*$
          type: string
        _fixedCanonical:
          description: Extensions for fixedCanonical
          $ref: '#/components/schemas/Element'
        fixedCode:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _fixedCode:
          description: Extensions for fixedCode
          $ref: '#/components/schemas/Element'
        fixedDate:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _fixedDate:
          description: Extensions for fixedDate
          $ref: '#/components/schemas/Element'
        fixedDateTime:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _fixedDateTime:
          description: Extensions for fixedDateTime
          $ref: '#/components/schemas/Element'
        fixedDecimal:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _fixedDecimal:
          description: Extensions for fixedDecimal
          $ref: '#/components/schemas/Element'
        fixedId:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _fixedId:
          description: Extensions for fixedId
          $ref: '#/components/schemas/Element'
        fixedInstant:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _fixedInstant:
          description: Extensions for fixedInstant
          $ref: '#/components/schemas/Element'
        fixedInteger:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _fixedInteger:
          description: Extensions for fixedInteger
          $ref: '#/components/schemas/Element'
        fixedMarkdown:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _fixedMarkdown:
          description: Extensions for fixedMarkdown
          $ref: '#/components/schemas/Element'
        fixedOid:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _fixedOid:
          description: Extensions for fixedOid
          $ref: '#/components/schemas/Element'
        fixedPositiveInt:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^[1-9][0-9]*$'
          type: number
        _fixedPositiveInt:
          description: Extensions for fixedPositiveInt
          $ref: '#/components/schemas/Element'
        fixedString:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _fixedString:
          description: Extensions for fixedString
          $ref: '#/components/schemas/Element'
        fixedTime:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _fixedTime:
          description: Extensions for fixedTime
          $ref: '#/components/schemas/Element'
        fixedUnsignedInt:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _fixedUnsignedInt:
          description: Extensions for fixedUnsignedInt
          $ref: '#/components/schemas/Element'
        fixedUri:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: ^\S*$
          type: string
        _fixedUri:
          description: Extensions for fixedUri
          $ref: '#/components/schemas/Element'
        fixedUrl:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: ^\S*$
          type: string
        _fixedUrl:
          description: Extensions for fixedUrl
          $ref: '#/components/schemas/Element'
        fixedUuid:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          type: string
        _fixedUuid:
          description: Extensions for fixedUuid
          $ref: '#/components/schemas/Element'
        fixedAddress:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Address'
        fixedAge:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Age'
        fixedAnnotation:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Annotation'
        fixedAttachment:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Attachment'
        fixedCodeableConcept:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/CodeableConcept'
        fixedCoding:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Coding'
        fixedContactPoint:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/ContactPoint'
        fixedCount:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Count'
        fixedDistance:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Distance'
        fixedDuration:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Duration'
        fixedHumanName:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/HumanName'
        fixedIdentifier:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Identifier'
        fixedMoney:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Money'
        fixedPeriod:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Period'
        fixedQuantity:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Quantity'
        fixedRange:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Range'
        fixedRatio:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Ratio'
        fixedReference:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Reference'
        fixedSampledData:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/SampledData'
        fixedSignature:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Signature'
        fixedTiming:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Timing'
        fixedContactDetail:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/ContactDetail'
        fixedContributor:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Contributor'
        fixedDataRequirement:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/DataRequirement'
        fixedExpression:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Expression'
        fixedParameterDefinition:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/ParameterDefinition'
        fixedRelatedArtifact:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/RelatedArtifact'
        fixedTriggerDefinition:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/TriggerDefinition'
        fixedUsageContext:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/UsageContext'
        fixedDosage:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Dosage'
        fixedMeta:
          description: 'Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.'
          $ref: '#/components/schemas/Meta'
        patternBase64Binary:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _patternBase64Binary:
          description: Extensions for patternBase64Binary
          $ref: '#/components/schemas/Element'
        patternBoolean:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: ^true|false$
          type: boolean
        _patternBoolean:
          description: Extensions for patternBoolean
          $ref: '#/components/schemas/Element'
        patternCanonical:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: ^\S*$
          type: string
        _patternCanonical:
          description: Extensions for patternCanonical
          $ref: '#/components/schemas/Element'
        patternCode:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _patternCode:
          description: Extensions for patternCode
          $ref: '#/components/schemas/Element'
        patternDate:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _patternDate:
          description: Extensions for patternDate
          $ref: '#/components/schemas/Element'
        patternDateTime:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _patternDateTime:
          description: Extensions for patternDateTime
          $ref: '#/components/schemas/Element'
        patternDecimal:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _patternDecimal:
          description: Extensions for patternDecimal
          $ref: '#/components/schemas/Element'
        patternId:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _patternId:
          description: Extensions for patternId
          $ref: '#/components/schemas/Element'
        patternInstant:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _patternInstant:
          description: Extensions for patternInstant
          $ref: '#/components/schemas/Element'
        patternInteger:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _patternInteger:
          description: Extensions for patternInteger
          $ref: '#/components/schemas/Element'
        patternMarkdown:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _patternMarkdown:
          description: Extensions for patternMarkdown
          $ref: '#/components/schemas/Element'
        patternOid:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _patternOid:
          description: Extensions for patternOid
          $ref: '#/components/schemas/Element'
        patternPositiveInt:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[1-9][0-9]*$'
          type: number
        _patternPositiveInt:
          description: Extensions for patternPositiveInt
          $ref: '#/components/schemas/Element'
        patternString:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _patternString:
          description: Extensions for patternString
          $ref: '#/components/schemas/Element'
        patternTime:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _patternTime:
          description: Extensions for patternTime
          $ref: '#/components/schemas/Element'
        patternUnsignedInt:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _patternUnsignedInt:
          description: Extensions for patternUnsignedInt
          $ref: '#/components/schemas/Element'
        patternUri:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: ^\S*$
          type: string
        _patternUri:
          description: Extensions for patternUri
          $ref: '#/components/schemas/Element'
        patternUrl:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: ^\S*$
          type: string
        _patternUrl:
          description: Extensions for patternUrl
          $ref: '#/components/schemas/Element'
        patternUuid:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          type: string
        _patternUuid:
          description: Extensions for patternUuid
          $ref: '#/components/schemas/Element'
        patternAddress:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Address'
        patternAge:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Age'
        patternAnnotation:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Annotation'
        patternAttachment:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Attachment'
        patternCodeableConcept:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/CodeableConcept'
        patternCoding:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Coding'
        patternContactPoint:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/ContactPoint'
        patternCount:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Count'
        patternDistance:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Distance'
        patternDuration:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Duration'
        patternHumanName:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/HumanName'
        patternIdentifier:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Identifier'
        patternMoney:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Money'
        patternPeriod:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Period'
        patternQuantity:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Quantity'
        patternRange:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Range'
        patternRatio:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Ratio'
        patternReference:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Reference'
        patternSampledData:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/SampledData'
        patternSignature:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Signature'
        patternTiming:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Timing'
        patternContactDetail:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/ContactDetail'
        patternContributor:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Contributor'
        patternDataRequirement:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/DataRequirement'
        patternExpression:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Expression'
        patternParameterDefinition:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/ParameterDefinition'
        patternRelatedArtifact:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/RelatedArtifact'
        patternTriggerDefinition:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/TriggerDefinition'
        patternUsageContext:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/UsageContext'
        patternDosage:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Dosage'
        patternMeta:
          description: |-
            Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  

            When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.

            When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.

            When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,

            1. If primitive: it must match exactly the pattern value
            2. If a complex object: it must match (recursively) the pattern value
            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Meta'
        example:
          description: A sample value for this element demonstrating the type of information that would typically be found in the element.
          items:
            $ref: '#/components/schemas/ElementDefinition_Example'
          type: array
        minValueDate:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _minValueDate:
          description: Extensions for minValueDate
          $ref: '#/components/schemas/Element'
        minValueDateTime:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _minValueDateTime:
          description: Extensions for minValueDateTime
          $ref: '#/components/schemas/Element'
        minValueInstant:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _minValueInstant:
          description: Extensions for minValueInstant
          $ref: '#/components/schemas/Element'
        minValueTime:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _minValueTime:
          description: Extensions for minValueTime
          $ref: '#/components/schemas/Element'
        minValueDecimal:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _minValueDecimal:
          description: Extensions for minValueDecimal
          $ref: '#/components/schemas/Element'
        minValueInteger:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _minValueInteger:
          description: Extensions for minValueInteger
          $ref: '#/components/schemas/Element'
        minValuePositiveInt:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^[1-9][0-9]*$'
          type: number
        _minValuePositiveInt:
          description: Extensions for minValuePositiveInt
          $ref: '#/components/schemas/Element'
        minValueUnsignedInt:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _minValueUnsignedInt:
          description: Extensions for minValueUnsignedInt
          $ref: '#/components/schemas/Element'
        minValueQuantity:
          description: 'The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          $ref: '#/components/schemas/Quantity'
        maxValueDate:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _maxValueDate:
          description: Extensions for maxValueDate
          $ref: '#/components/schemas/Element'
        maxValueDateTime:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _maxValueDateTime:
          description: Extensions for maxValueDateTime
          $ref: '#/components/schemas/Element'
        maxValueInstant:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _maxValueInstant:
          description: Extensions for maxValueInstant
          $ref: '#/components/schemas/Element'
        maxValueTime:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _maxValueTime:
          description: Extensions for maxValueTime
          $ref: '#/components/schemas/Element'
        maxValueDecimal:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _maxValueDecimal:
          description: Extensions for maxValueDecimal
          $ref: '#/components/schemas/Element'
        maxValueInteger:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _maxValueInteger:
          description: Extensions for maxValueInteger
          $ref: '#/components/schemas/Element'
        maxValuePositiveInt:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^[1-9][0-9]*$'
          type: number
        _maxValuePositiveInt:
          description: Extensions for maxValuePositiveInt
          $ref: '#/components/schemas/Element'
        maxValueUnsignedInt:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _maxValueUnsignedInt:
          description: Extensions for maxValueUnsignedInt
          $ref: '#/components/schemas/Element'
        maxValueQuantity:
          description: 'The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.'
          $ref: '#/components/schemas/Quantity'
        maxLength:
          description: Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.
          $ref: '#/components/schemas/integer'
        _maxLength:
          description: Extensions for maxLength
          $ref: '#/components/schemas/Element'
        condition:
          description: A reference to an invariant that may make additional statements about the cardinality or value in the instance.
          items:
            $ref: '#/components/schemas/id'
          type: array
        _condition:
          description: Extensions for condition
          items:
            $ref: '#/components/schemas/Element'
          type: array
        constraint:
          description: Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.
          items:
            $ref: '#/components/schemas/ElementDefinition_Constraint'
          type: array
        mustSupport:
          description: 'If true, implementations that produce or consume resources SHALL provide "support" for the element in some meaningful way.  If false, the element may be ignored and not supported. If false, whether to populate or use the data element in any way is at the discretion of the implementation.'
          $ref: '#/components/schemas/boolean'
        _mustSupport:
          description: Extensions for mustSupport
          $ref: '#/components/schemas/Element'
        isModifier:
          description: 'If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.'
          $ref: '#/components/schemas/boolean'
        _isModifier:
          description: Extensions for isModifier
          $ref: '#/components/schemas/Element'
        isModifierReason:
          description: Explains how that element affects the interpretation of the resource or element that contains it.
          $ref: '#/components/schemas/string'
        _isModifierReason:
          description: Extensions for isModifierReason
          $ref: '#/components/schemas/Element'
        isSummary:
          description: Whether the element should be included if a client requests a search with the parameter _summary=true.
          $ref: '#/components/schemas/boolean'
        _isSummary:
          description: Extensions for isSummary
          $ref: '#/components/schemas/Element'
        binding:
          description: 'Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri).'
          $ref: '#/components/schemas/ElementDefinition_Binding'
        mapping:
          description: Identifies a concept from an external specification that roughly corresponds to this element.
          items:
            $ref: '#/components/schemas/ElementDefinition_Mapping'
          type: array
      additionalProperties: false
    ElementDefinition_Slicing:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        discriminator:
          description: 'Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.'
          items:
            $ref: '#/components/schemas/ElementDefinition_Discriminator'
          type: array
        description:
          description: 'A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.'
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        ordered:
          description: If the matching elements have to occur in the same order as defined in the profile.
          $ref: '#/components/schemas/boolean'
        _ordered:
          description: Extensions for ordered
          $ref: '#/components/schemas/Element'
        rules:
          description: 'Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.'
          enum:
            - closed
            - open
            - openAtEnd
        _rules:
          description: Extensions for rules
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Discriminator:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: How the element value is interpreted when discrimination is evaluated.
          enum:
            - value
            - exists
            - pattern
            - type
            - profile
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        path:
          description: 'A FHIRPath expression, using [the simple subset of FHIRPath](fhirpath.html#simple), that is used to identify the element on which discrimination is based.'
          $ref: '#/components/schemas/string'
        _path:
          description: Extensions for path
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Base:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: 'The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.'
          $ref: '#/components/schemas/string'
        _path:
          description: Extensions for path
          $ref: '#/components/schemas/Element'
        min:
          description: Minimum cardinality of the base element identified by the path.
          $ref: '#/components/schemas/unsignedInt'
        _min:
          description: Extensions for min
          $ref: '#/components/schemas/Element'
        max:
          description: Maximum cardinality of the base element identified by the path.
          $ref: '#/components/schemas/string'
        _max:
          description: Extensions for max
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Type:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: 'URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. "string" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models.'
          $ref: '#/components/schemas/uri'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
        profile:
          description: 'Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.'
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        targetProfile:
          description: 'Used when the type is "Reference" or "canonical", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.'
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        aggregation:
          description: 'If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.'
          items:
            enum:
              - contained
              - referenced
              - bundled
          type: array
        _aggregation:
          description: Extensions for aggregation
          items:
            $ref: '#/components/schemas/Element'
          type: array
        versioning:
          description: 'Whether this reference needs to be version specific or version independent, or whether either can be used.'
          enum:
            - either
            - independent
            - specific
        _versioning:
          description: Extensions for versioning
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Example:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        label:
          description: Describes the purpose of this example amoung the set of examples.
          $ref: '#/components/schemas/string'
        _label:
          description: Extensions for label
          $ref: '#/components/schemas/Element'
        valueBase64Binary:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          description: Extensions for valueBase64Binary
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          description: Extensions for valueBoolean
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: ^\S*$
          type: string
        _valueCanonical:
          description: Extensions for valueCanonical
          $ref: '#/components/schemas/Element'
        valueCode:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          description: Extensions for valueCode
          $ref: '#/components/schemas/Element'
        valueDate:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _valueDate:
          description: Extensions for valueDate
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _valueDateTime:
          description: Extensions for valueDateTime
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          description: Extensions for valueDecimal
          $ref: '#/components/schemas/Element'
        valueId:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          description: Extensions for valueId
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _valueInstant:
          description: Extensions for valueInstant
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          description: Extensions for valueInteger
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueMarkdown:
          description: Extensions for valueMarkdown
          $ref: '#/components/schemas/Element'
        valueOid:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _valueOid:
          description: Extensions for valueOid
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^[1-9][0-9]*$'
          type: number
        _valuePositiveInt:
          description: Extensions for valuePositiveInt
          $ref: '#/components/schemas/Element'
        valueString:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          description: Extensions for valueString
          $ref: '#/components/schemas/Element'
        valueTime:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          description: Extensions for valueTime
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _valueUnsignedInt:
          description: Extensions for valueUnsignedInt
          $ref: '#/components/schemas/Element'
        valueUri:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: ^\S*$
          type: string
        _valueUri:
          description: Extensions for valueUri
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: ^\S*$
          type: string
        _valueUrl:
          description: Extensions for valueUrl
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          type: string
        _valueUuid:
          description: Extensions for valueUuid
          $ref: '#/components/schemas/Element'
        valueAddress:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Address'
        valueAge:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Count'
        valueDistance:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Distance'
        valueDuration:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Money'
        valuePeriod:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Period'
        valueQuantity:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Range'
        valueRatio:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Ratio'
        valueReference:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Signature'
        valueTiming:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          description: 'The actual value for the element, which must be one of the types allowed for this element.'
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    ElementDefinition_Constraint:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        key:
          description: Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.
          $ref: '#/components/schemas/id'
        _key:
          description: Extensions for key
          $ref: '#/components/schemas/Element'
        requirements:
          description: Description of why this constraint is necessary or appropriate.
          $ref: '#/components/schemas/string'
        _requirements:
          description: Extensions for requirements
          $ref: '#/components/schemas/Element'
        severity:
          description: Identifies the impact constraint violation has on the conformance of the instance.
          enum:
            - error
            - warning
        _severity:
          description: Extensions for severity
          $ref: '#/components/schemas/Element'
        human:
          description: Text that can be used to describe the constraint in messages identifying that the constraint has been violated.
          $ref: '#/components/schemas/string'
        _human:
          description: Extensions for human
          $ref: '#/components/schemas/Element'
        expression:
          description: 'A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met.'
          $ref: '#/components/schemas/string'
        _expression:
          description: Extensions for expression
          $ref: '#/components/schemas/Element'
        xpath:
          description: An XPath expression of constraint that can be executed to see if this constraint is met.
          $ref: '#/components/schemas/string'
        _xpath:
          description: Extensions for xpath
          $ref: '#/components/schemas/Element'
        source:
          description: 'A reference to the original source of the constraint, for traceability purposes.'
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    ElementDefinition_Binding:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        strength:
          description: 'Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.'
          enum:
            - required
            - extensible
            - preferred
            - example
        _strength:
          description: Extensions for strength
          $ref: '#/components/schemas/Element'
        description:
          description: Describes the intended use of this particular set of codes.
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        valueSet:
          description: Refers to the value set that identifies the set of codes the binding refers to.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    ElementDefinition_Mapping:
      description: 'Captures constraints on each element within the resource, profile, or extension.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identity:
          description: An internal reference to the definition of a mapping.
          $ref: '#/components/schemas/id'
        _identity:
          description: Extensions for identity
          $ref: '#/components/schemas/Element'
        language:
          description: Identifies the computable language in which mapping.map is expressed.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        map:
          description: Expresses what part of the target specification corresponds to this element.
          $ref: '#/components/schemas/string'
        _map:
          description: Extensions for map
          $ref: '#/components/schemas/Element'
        comment:
          description: Comments that provide information about the mapping or its use.
          $ref: '#/components/schemas/string'
        _comment:
          description: Extensions for comment
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Account:
      description: 'A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.'
      properties:
        resourceType:
          description: This is a Account resource
          enum:
            - Account
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique identifier used to reference the account.  Might or might not be intended for human use (e.g. credit card number).
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: Indicates whether the account is presently used/usable or not.
          enum:
            - active
            - inactive
            - entered-in-error
            - on-hold
            - unknown
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        type:
          description: Categorizes the account for reporting and searching purposes.
          $ref: '#/components/schemas/CodeableConcept'
        name:
          description: 'Name used for the account when displaying it to humans in reports, etc.'
          $ref: '#/components/schemas/string'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        subject:
          description: 'Identifies the entity which incurs the expenses. While the immediate recipients of services or goods might be entities related to the subject, the expenses were ultimately incurred by the subject of the Account.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        servicePeriod:
          description: The date range of services associated with this account.
          $ref: '#/components/schemas/Period'
        coverage:
          description: 'The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account.'
          items:
            $ref: '#/components/schemas/Account_Coverage'
          type: array
        owner:
          description: 'Indicates the service area, hospital, department, etc. with responsibility for managing the Account.'
          $ref: '#/components/schemas/Reference'
        description:
          description: Provides additional information about what the account tracks and how it is used.
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        guarantor:
          description: The parties responsible for balancing the account if other payment options fall short.
          items:
            $ref: '#/components/schemas/Account_Guarantor'
          type: array
        partOf:
          description: Reference to a parent Account.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
    Account_Coverage:
      description: 'A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        coverage:
          description: |-
            The party(s) that contribute to payment (or part of) of the charges applied to this account (including self-pay).

            A coverage may only be responsible for specific types of charges, and the sequence of the coverages in the account could be important when processing billing.
          $ref: '#/components/schemas/Reference'
        priority:
          description: The priority of the coverage in the context of this account.
          $ref: '#/components/schemas/positiveInt'
        _priority:
          description: Extensions for priority
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - coverage
    Account_Guarantor:
      description: 'A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        party:
          description: The entity who is responsible.
          $ref: '#/components/schemas/Reference'
        onHold:
          description: A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.
          $ref: '#/components/schemas/boolean'
        _onHold:
          description: Extensions for onHold
          $ref: '#/components/schemas/Element'
        period:
          description: The timeframe during which the guarantor accepts responsibility for the account.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - party
    ActivityDefinition:
      description: 'This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.'
      properties:
        resourceType:
          description: This is a ActivityDefinition resource
          enum: 
            - ActivityDefinition
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: 'An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this activity definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the activity definition is stored on different servers.'
          $ref: '#/components/schemas/uri'
        _url:
          description: Extensions for url
          $ref: '#/components/schemas/Element'
        identifier:
          description: 'A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance.'
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: 'The identifier that is used to identify this version of the activity definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the activity definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets.'
          $ref: '#/components/schemas/string'
        _version:
          description: Extensions for version
          $ref: '#/components/schemas/Element'
        name:
          description: A natural language name identifying the activity definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        title:
          description: 'A short, descriptive, user-friendly title for the activity definition.'
          $ref: '#/components/schemas/string'
        _title:
          description: Extensions for title
          $ref: '#/components/schemas/Element'
        subtitle:
          description: An explanatory or alternate title for the activity definition giving additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          description: Extensions for subtitle
          $ref: '#/components/schemas/Element'
        status:
          description: The status of this activity definition. Enables tracking the life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        experimental:
          description: A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          description: Extensions for experimental
          $ref: '#/components/schemas/Element'
        subjectCodeableConcept:
          description: A code or group definition that describes the intended subject of the activity being defined.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: A code or group definition that describes the intended subject of the activity being defined.
          $ref: '#/components/schemas/Reference'
        date:
          description: 'The date  (and optionally time) when the activity definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the activity definition changes.'
          $ref: '#/components/schemas/dateTime'
        _date:
          description: Extensions for date
          $ref: '#/components/schemas/Element'
        publisher:
          description: The name of the organization or individual that published the activity definition.
          $ref: '#/components/schemas/string'
        _publisher:
          description: Extensions for publisher
          $ref: '#/components/schemas/Element'
        contact:
          description: Contact details to assist a user in finding and communicating with the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: A free text natural language description of the activity definition from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        useContext:
          description: 'The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances.'
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: A legal or geographic region in which the activity definition is intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: Explanation of why this activity definition is needed and why it has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          description: Extensions for purpose
          $ref: '#/components/schemas/Element'
        usage:
          description: A detailed description of how the activity definition is used from a clinical perspective.
          $ref: '#/components/schemas/string'
        _usage:
          description: Extensions for usage
          $ref: '#/components/schemas/Element'
        copyright:
          description: A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          description: Extensions for copyright
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          description: Extensions for approvalDate
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          description: Extensions for lastReviewDate
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: The period during which the activity definition content was or is planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: An individiual or organization primarily involved in the creation and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: An individual or organization primarily responsible for internal coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: An individual or organization primarily responsible for review of some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: An individual or organization responsible for officially endorsing the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: 'Related artifacts such as additional documentation, justification, or bibliographic references.'
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        library:
          description: A reference to a Library resource containing any formal logic used by the activity definition.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        kind:
          description: 'A description of the kind of resource the activity definition is representing. For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but not always, this is a Request resource.'
          $ref: '#/components/schemas/code'
        _kind:
          description: Extensions for kind
          $ref: '#/components/schemas/Element'
        profile:
          description: A profile to which the target of the activity definition is expected to conform.
          $ref: '#/components/schemas/canonical'
        code:
          description: 'Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter.'
          $ref: '#/components/schemas/CodeableConcept'
        intent:
          description: Indicates the level of authority/intentionality associated with the activity and where the request should fit into the workflow chain.
          $ref: '#/components/schemas/code'
        _intent:
          description: Extensions for intent
          $ref: '#/components/schemas/Element'
        priority:
          description: Indicates how quickly the activity  should be addressed with respect to other requests.
          $ref: '#/components/schemas/code'
        _priority:
          description: Extensions for priority
          $ref: '#/components/schemas/Element'
        doNotPerform:
          description: 'Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action.'
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          description: Extensions for doNotPerform
          $ref: '#/components/schemas/Element'
        timingTiming:
          description: 'The period, timing or frequency upon which the described activity is to occur.'
          $ref: '#/components/schemas/Timing'
        timingDateTime:
          description: 'The period, timing or frequency upon which the described activity is to occur.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _timingDateTime:
          description: Extensions for timingDateTime
          $ref: '#/components/schemas/Element'
        timingAge:
          description: 'The period, timing or frequency upon which the described activity is to occur.'
          $ref: '#/components/schemas/Age'
        timingPeriod:
          description: 'The period, timing or frequency upon which the described activity is to occur.'
          $ref: '#/components/schemas/Period'
        timingRange:
          description: 'The period, timing or frequency upon which the described activity is to occur.'
          $ref: '#/components/schemas/Range'
        timingDuration:
          description: 'The period, timing or frequency upon which the described activity is to occur.'
          $ref: '#/components/schemas/Duration'
        location:
          description: 'Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.'
          $ref: '#/components/schemas/Reference'
        participant:
          description: Indicates who should participate in performing the action described.
          items:
            $ref: '#/components/schemas/ActivityDefinition_Participant'
          type: array
        productReference:
          description: 'Identifies the food, drug or other product being consumed or supplied in the activity.'
          $ref: '#/components/schemas/Reference'
        productCodeableConcept:
          description: 'Identifies the food, drug or other product being consumed or supplied in the activity.'
          $ref: '#/components/schemas/CodeableConcept'
        quantity:
          description: 'Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).'
          $ref: '#/components/schemas/Quantity'
        dosage:
          description: Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources.
          items:
            $ref: '#/components/schemas/Dosage'
          type: array
        bodySite:
          description: Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specimenRequirement:
          description: 'Defines specimen requirements for the action to be performed, such as required specimens for a lab test.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        observationRequirement:
          description: 'Defines observation requirements for the action to be performed, such as body weight or surface area.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        observationResultRequirement:
          description: Defines the observations that are expected to be produced by the action.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        transform:
          description: A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.
          $ref: '#/components/schemas/canonical'
        dynamicValue:
          description: 'Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient''s weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result.'
          items:
            $ref: '#/components/schemas/ActivityDefinition_DynamicValue'
          type: array
      additionalProperties: false
      required:
        - resourceType
    ActivityDefinition_Participant:
      description: 'This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of participant in the action.
          $ref: '#/components/schemas/code'
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        role:
          description: The role the participant should play in performing the described action.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ActivityDefinition_DynamicValue:
      description: 'This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: 'The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).'
          $ref: '#/components/schemas/string'
        _path:
          description: Extensions for path
          $ref: '#/components/schemas/Element'
        expression:
          description: An expression specifying the value of the customized element.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
      required:
        - expression
    AdverseEvent:
      description: 'Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.'
      properties:
        resourceType:
          description: This is a AdverseEvent resource
          enum: 
            - AdverseEvent
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifiers assigned to this adverse event by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
          $ref: '#/components/schemas/Identifier'
        actuality:
          description: 'Whether the event actually happened, or just had the potential to. Note that this is independent of whether anyone was affected or harmed or how severely.'
          enum:
            - actual
            - potential
        _actuality:
          description: Extensions for actuality
          $ref: '#/components/schemas/Element'
        category:
          description: 'The overall type of event, intended for search and filtering purposes.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        event:
          description: This element defines the specific type of event that occurred or that was prevented from occurring.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: This subject or group impacted by the event.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: The Encounter during which AdverseEvent was created or to which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        date:
          description: The date (and perhaps time) when the adverse event occurred.
          $ref: '#/components/schemas/dateTime'
        _date:
          description: Extensions for date
          $ref: '#/components/schemas/Element'
        detected:
          description: 'Estimated or actual date the AdverseEvent began, in the opinion of the reporter.'
          $ref: '#/components/schemas/dateTime'
        _detected:
          description: Extensions for detected
          $ref: '#/components/schemas/Element'
        recordedDate:
          description: The date on which the existence of the AdverseEvent was first recorded.
          $ref: '#/components/schemas/dateTime'
        _recordedDate:
          description: Extensions for recordedDate
          $ref: '#/components/schemas/Element'
        resultingCondition:
          description: 'Includes information about the reaction that occurred as a result of exposure to a substance (for example, a drug or a chemical).'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        location:
          description: The information about where the adverse event occurred.
          $ref: '#/components/schemas/Reference'
        seriousness:
          description: Assessment whether this event was of real importance.
          $ref: '#/components/schemas/CodeableConcept'
        severity:
          description: 'Describes the severity of the adverse event, in relation to the subject. Contrast to AdverseEvent.seriousness - a severe rash might not be serious, but a mild heart problem is.'
          $ref: '#/components/schemas/CodeableConcept'
        outcome:
          description: Describes the type of outcome from the adverse event.
          $ref: '#/components/schemas/CodeableConcept'
        recorder:
          description: Information on who recorded the adverse event.  May be the patient or a practitioner.
          $ref: '#/components/schemas/Reference'
        contributor:
          description: 'Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness).'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        suspectEntity:
          description: Describes the entity that is suspected to have caused the adverse event.
          items:
            $ref: '#/components/schemas/AdverseEvent_SuspectEntity'
          type: array
        subjectMedicalHistory:
          description: AdverseEvent.subjectMedicalHistory.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        referenceDocument:
          description: AdverseEvent.referenceDocument.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        study:
          description: AdverseEvent.study.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    AdverseEvent_SuspectEntity:
      description: 'Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        instance:
          description: 'Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device.'
          $ref: '#/components/schemas/Reference'
        causality:
          description: Information on the possible cause of the event.
          items:
            $ref: '#/components/schemas/AdverseEvent_Causality'
          type: array
      additionalProperties: false
      required:
        - instance
    AdverseEvent_Causality:
      description: 'Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        assessment:
          description: Assessment of if the entity caused the event.
          $ref: '#/components/schemas/CodeableConcept'
        productRelatedness:
          description: AdverseEvent.suspectEntity.causalityProductRelatedness.
          $ref: '#/components/schemas/string'
        _productRelatedness:
          description: Extensions for productRelatedness
          $ref: '#/components/schemas/Element'
        author:
          description: AdverseEvent.suspectEntity.causalityAuthor.
          $ref: '#/components/schemas/Reference'
        method:
          description: ProbabilityScale | Bayesian | Checklist.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    AllergyIntolerance:
      description: 'Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.'
      properties:
        resourceType:
          description: This is a AllergyIntolerance resource
          enum:
            - AllergyIntolerance
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        clinicalStatus:
          description: The clinical status of the allergy or intolerance.
          $ref: '#/components/schemas/CodeableConcept'
        verificationStatus:
          description: 'Assertion about certainty associated with the propensity, or potential risk, of a reaction to the identified substance (including pharmaceutical product).'
          $ref: '#/components/schemas/CodeableConcept'
        type:
          description: Identification of the underlying physiological mechanism for the reaction risk.
          enum:
            - allergy
            - intolerance
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        category:
          description: Category of the identified substance.
          items:
            enum:
              - food
              - medication
              - environment
              - biologic
          type: array
        _category:
          description: Extensions for category
          items:
            $ref: '#/components/schemas/Element'
          type: array
        criticality:
          description: 'Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance.'
          enum:
            - low
            - high
            - unable-to-assess
        _criticality:
          description: Extensions for criticality
          $ref: '#/components/schemas/Element'
        code:
          description: 'Code for an allergy or intolerance statement (either a positive or a negated/excluded statement).  This may be a code for a substance or pharmaceutical product that is considered to be responsible for the adverse reaction risk (e.g., "Latex"), an allergy or intolerance condition (e.g., "Latex allergy"), or a negated/excluded code for a specific substance or class (e.g., "No latex allergy") or a general or categorical negated statement (e.g.,  "No known allergy", "No known drug allergies").  Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the ''code'' and ignore the ''reaction.substance''.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.'
          $ref: '#/components/schemas/CodeableConcept'
        patient:
          description: The patient who has the allergy or intolerance.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: The encounter when the allergy or intolerance was asserted.
          $ref: '#/components/schemas/Reference'
        onsetDateTime:
          description: 'Estimated or actual date,  date-time, or age when allergy or intolerance was identified.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _onsetDateTime:
          description: Extensions for onsetDateTime
          $ref: '#/components/schemas/Element'
        onsetAge:
          description: 'Estimated or actual date,  date-time, or age when allergy or intolerance was identified.'
          $ref: '#/components/schemas/Age'
        onsetPeriod:
          description: 'Estimated or actual date,  date-time, or age when allergy or intolerance was identified.'
          $ref: '#/components/schemas/Period'
        onsetRange:
          description: 'Estimated or actual date,  date-time, or age when allergy or intolerance was identified.'
          $ref: '#/components/schemas/Range'
        onsetString:
          description: 'Estimated or actual date,  date-time, or age when allergy or intolerance was identified.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _onsetString:
          description: Extensions for onsetString
          $ref: '#/components/schemas/Element'
        recordedDate:
          description: 'The recordedDate represents when this particular AllergyIntolerance record was created in the system, which is often a system-generated date.'
          $ref: '#/components/schemas/dateTime'
        _recordedDate:
          description: Extensions for recordedDate
          $ref: '#/components/schemas/Element'
        recorder:
          description: Individual who recorded the record and takes responsibility for its content.
          $ref: '#/components/schemas/Reference'
        asserter:
          description: The source of the information about the allergy that is recorded.
          $ref: '#/components/schemas/Reference'
        lastOccurrence:
          description: Represents the date and/or time of the last known occurrence of a reaction event.
          $ref: '#/components/schemas/dateTime'
        _lastOccurrence:
          description: Extensions for lastOccurrence
          $ref: '#/components/schemas/Element'
        note:
          description: 'Additional narrative about the propensity for the Adverse Reaction, not captured in other fields.'
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        reaction:
          description: Details about each adverse reaction event linked to exposure to the identified substance.
          items:
            $ref: '#/components/schemas/AllergyIntolerance_Reaction'
          type: array
      additionalProperties: false
      required:
        - patient
        - resourceType
    AllergyIntolerance_Reaction:
      description: 'Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        substance:
          description: 'Identification of the specific substance (or pharmaceutical product) considered to be responsible for the Adverse Reaction event. Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the ''code'' and ignore the ''reaction.substance''.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.'
          $ref: '#/components/schemas/CodeableConcept'
        manifestation:
          description: Clinical symptoms and/or signs that are observed or associated with the adverse reaction event.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          description: 'Text description about the reaction as a whole, including details of the manifestation if required.'
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        onset:
          description: Record of the date and/or time of the onset of the Reaction.
          $ref: '#/components/schemas/dateTime'
        _onset:
          description: Extensions for onset
          $ref: '#/components/schemas/Element'
        severity:
          description: 'Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations.'
          enum:
            - mild
            - moderate
            - severe
        _severity:
          description: Extensions for severity
          $ref: '#/components/schemas/Element'
        exposureRoute:
          description: Identification of the route by which the subject was exposed to the substance.
          $ref: '#/components/schemas/CodeableConcept'
        note:
          description: Additional text about the adverse reaction event not captured in other fields.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - manifestation
    Basic:
      description: 'Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don''t map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.'
      properties:
        resourceType:
          description: This is a Basic resource
          enum:
            - Basic
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: 'Identifier assigned to the resource for business purposes, outside the context of FHIR.'
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        code:
          description: Identifies the 'type' of resource - equivalent to the resource name for other resources.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: 'Identifies the patient, practitioner, device or any other resource that is the "focus" of this resource.'
          $ref: '#/components/schemas/Reference'
        created:
          description: Identifies when the resource was first created.
          $ref: '#/components/schemas/date'
        _created:
          description: Extensions for created
          $ref: '#/components/schemas/Element'
        author:
          description: Indicates who was responsible for creating the resource instance.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
        - resourceType
    Binary:
      description: 'A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.'
      properties:
        resourceType:
          description: This is a Binary resource
          enum:
            - Binary
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        contentType:
          description: MimeType of the binary content represented as a standard MimeType (BCP 13).
          $ref: '#/components/schemas/code'
        _contentType:
          description: Extensions for contentType
          $ref: '#/components/schemas/Element'
        securityContext:
          description: 'This element identifies another resource that can be used as a proxy of the security sensitivity to use when deciding and enforcing access control rules for the Binary resource. Given that the Binary resource contains very few elements that can be used to determine the sensitivity of the data and relationships to individuals, the referenced resource stands in as a proxy equivalent for this purpose. This referenced resource may be related to the Binary (e.g. Media, DocumentReference), or may be some non-related Resource purely as a security proxy. E.g. to identify that the binary resource relates to a patient, and access should only be granted to applications that have access to the patient.'
          $ref: '#/components/schemas/Reference'
        data:
          description: 'The actual content, base64 encoded.'
          $ref: '#/components/schemas/base64Binary'
        _data:
          description: Extensions for data
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - resourceType
    BodyStructure:
      description: Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.
      properties:
        resourceType:
          description: This is a BodyStructure resource
          enum:
            - BodyStructure
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Identifier for this instance of the anatomical structure.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          description: Whether this body site is in active use.
          $ref: '#/components/schemas/boolean'
        _active:
          description: Extensions for active
          $ref: '#/components/schemas/Element'
        morphology:
          description: The kind of structure being represented by the body structure at `BodyStructure.location`.  This can define both normal and abnormal morphologies.
          $ref: '#/components/schemas/CodeableConcept'
        location:
          description: 'The anatomical location or region of the specimen, lesion, or body structure.'
          $ref: '#/components/schemas/CodeableConcept'
        locationQualifier:
          description: 'Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          description: 'A summary, characterization or explanation of the body structure.'
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        image:
          description: Image or images used to identify a location.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        patient:
          description: The person to which the body site belongs.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - patient
        - resourceType
    Bundle:
      description: A container for a collection of resources.
      properties:
        resourceType:
          description: This is a Bundle resource
          enum:
            - Bundle
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        identifier:
          description: A persistent identifier for the bundle that won't change as a bundle is copied from server to server.
          $ref: '#/components/schemas/Identifier'
        type:
          description: Indicates the purpose of this bundle - how it is intended to be used.
          enum:
            - document
            - message
            - transaction
            - transaction-response
            - batch
            - batch-response
            - history
            - searchset
            - collection
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        timestamp:
          description: The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.
          $ref: '#/components/schemas/instant'
        _timestamp:
          description: Extensions for timestamp
          $ref: '#/components/schemas/Element'
        total:
          description: 'If a set of search matches, this is the total number of entries of type ''match'' across all pages in the search.  It does not include search.mode = ''include'' or ''outcome'' entries and it does not provide a count of the number of entries in the Bundle.'
          $ref: '#/components/schemas/unsignedInt'
        _total:
          description: Extensions for total
          $ref: '#/components/schemas/Element'
        link:
          description: A series of links that provide context to this bundle.
          items:
            $ref: '#/components/schemas/Bundle_Link'
          type: array
        entry:
          description: An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).
          items:
            $ref: '#/components/schemas/Bundle_Entry'
          type: array
        signature:
          description: Digital Signature - base64 encoded. XML-DSig or a JWT.
          $ref: '#/components/schemas/Signature'
      additionalProperties: false
      required:
        - resourceType
    Bundle_Link:
      description: A container for a collection of resources.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        relation:
          description: 'A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).'
          $ref: '#/components/schemas/string'
        _relation:
          description: Extensions for relation
          $ref: '#/components/schemas/Element'
        url:
          description: The reference details for the link.
          $ref: '#/components/schemas/uri'
        _url:
          description: Extensions for url
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Bundle_Entry:
      description: A container for a collection of resources.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        link:
          description: A series of links that provide context to this entry.
          items:
            $ref: '#/components/schemas/Bundle_Link'
          type: array
        fullUrl:
          description: |-
            The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: 
            * fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)
            * Results from operations might involve resources that are not identified.
          $ref: '#/components/schemas/uri'
        _fullUrl:
          description: Extensions for fullUrl
          $ref: '#/components/schemas/Element'
        resource:
          description: The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.
          $ref: '#/components/schemas/ResourceList'
        search:
          description: Information about the search process that lead to the creation of this entry.
          $ref: '#/components/schemas/Bundle_Search'
        request:
          description: 'Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.'
          $ref: '#/components/schemas/Bundle_Request'
        response:
          description: Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.
          $ref: '#/components/schemas/Bundle_Response'
      additionalProperties: false
    Bundle_Search:
      description: A container for a collection of resources.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        mode:
          description: 'Why this entry is in the result set - whether it''s included as a match or because of an _include requirement, or to convey information or warning information about the search process.'
          enum:
            - match
            - include
            - outcome
        _mode:
          description: Extensions for mode
          $ref: '#/components/schemas/Element'
        score:
          description: 'When searching, the server''s search ranking score for the entry.'
          $ref: '#/components/schemas/decimal'
        _score:
          description: Extensions for score
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Bundle_Request:
      description: A container for a collection of resources.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        method:
          description: 'In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.'
          enum:
            - GET
            - HEAD
            - POST
            - PUT
            - DELETE
            - PATCH
        _method:
          description: Extensions for method
          $ref: '#/components/schemas/Element'
        url:
          description: 'The URL for this entry, relative to the root (the address to which the request is posted).'
          $ref: '#/components/schemas/uri'
        _url:
          description: Extensions for url
          $ref: '#/components/schemas/Element'
        ifNoneMatch:
          description: 'If the ETag values match, return a 304 Not Modified status. See the API documentation for ["Conditional Read"](http.html#cread).'
          $ref: '#/components/schemas/string'
        _ifNoneMatch:
          description: Extensions for ifNoneMatch
          $ref: '#/components/schemas/Element'
        ifModifiedSince:
          description: 'Only perform the operation if the last updated date matches. See the API documentation for ["Conditional Read"](http.html#cread).'
          $ref: '#/components/schemas/instant'
        _ifModifiedSince:
          description: Extensions for ifModifiedSince
          $ref: '#/components/schemas/Element'
        ifMatch:
          description: 'Only perform the operation if the Etag value matches. For more information, see the API section ["Managing Resource Contention"](http.html#concurrency).'
          $ref: '#/components/schemas/string'
        _ifMatch:
          description: Extensions for ifMatch
          $ref: '#/components/schemas/Element'
        ifNoneExist:
          description: 'Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for ["Conditional Create"](http.html#ccreate). This is just the query portion of the URL - what follows the "?" (not including the "?").'
          $ref: '#/components/schemas/string'
        _ifNoneExist:
          description: Extensions for ifNoneExist
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Bundle_Response:
      description: A container for a collection of resources.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.
          $ref: '#/components/schemas/string'
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        location:
          description: 'The location header created by processing this operation, populated if the operation returns a location.'
          $ref: '#/components/schemas/uri'
        _location:
          description: Extensions for location
          $ref: '#/components/schemas/Element'
        etag:
          description: 'The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).'
          $ref: '#/components/schemas/string'
        _etag:
          description: Extensions for etag
          $ref: '#/components/schemas/Element'
        lastModified:
          description: The date/time that the resource was modified on the server.
          $ref: '#/components/schemas/instant'
        _lastModified:
          description: Extensions for lastModified
          $ref: '#/components/schemas/Element'
        outcome:
          description: An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.
          $ref: '#/components/schemas/ResourceList'
      additionalProperties: false
    CodeSystem:
      description: 'The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.'
      properties:
        resourceType:
          description: This is a CodeSystem resource
          enum:
            - CodeSystem
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: 'An absolute URI that is used to identify this code system when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this code system is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the code system is stored on different servers. This is used in [Coding](datatypes.html#Coding).system.'
          $ref: '#/components/schemas/uri'
        _url:
          description: Extensions for url
          $ref: '#/components/schemas/Element'
        identifier:
          description: 'A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.'
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: 'The identifier that is used to identify this version of the code system when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the code system author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. This is used in [Coding](datatypes.html#Coding).version.'
          $ref: '#/components/schemas/string'
        _version:
          description: Extensions for version
          $ref: '#/components/schemas/Element'
        name:
          description: A natural language name identifying the code system. This name should be usable as an identifier for the module by machine processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        title:
          description: 'A short, descriptive, user-friendly title for the code system.'
          $ref: '#/components/schemas/string'
        _title:
          description: Extensions for title
          $ref: '#/components/schemas/Element'
        status:
          description: The date (and optionally time) when the code system resource was created or revised.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        experimental:
          description: A Boolean value to indicate that this code system is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          description: Extensions for experimental
          $ref: '#/components/schemas/Element'
        date:
          description: 'The date  (and optionally time) when the code system was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the code system changes.'
          $ref: '#/components/schemas/dateTime'
        _date:
          description: Extensions for date
          $ref: '#/components/schemas/Element'
        publisher:
          description: The name of the organization or individual that published the code system.
          $ref: '#/components/schemas/string'
        _publisher:
          description: Extensions for publisher
          $ref: '#/components/schemas/Element'
        contact:
          description: Contact details to assist a user in finding and communicating with the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: A free text natural language description of the code system from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        useContext:
          description: 'The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate code system instances.'
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: A legal or geographic region in which the code system is intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: Explanation of why this code system is needed and why it has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          description: Extensions for purpose
          $ref: '#/components/schemas/Element'
        copyright:
          description: A copyright statement relating to the code system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the code system.
          $ref: '#/components/schemas/markdown'
        _copyright:
          description: Extensions for copyright
          $ref: '#/components/schemas/Element'
        caseSensitive:
          description: If code comparison is case sensitive when codes within this system are compared to each other.
          $ref: '#/components/schemas/boolean'
        _caseSensitive:
          description: Extensions for caseSensitive
          $ref: '#/components/schemas/Element'
        valueSet:
          description: Canonical reference to the value set that contains the entire code system.
          $ref: '#/components/schemas/canonical'
        hierarchyMeaning:
          description: The meaning of the hierarchy of concepts as represented in this resource.
          enum:
            - grouped-by
            - is-a
            - part-of
            - classified-with
        _hierarchyMeaning:
          description: Extensions for hierarchyMeaning
          $ref: '#/components/schemas/Element'
        compositional:
          description: The code system defines a compositional (post-coordination) grammar.
          $ref: '#/components/schemas/boolean'
        _compositional:
          description: Extensions for compositional
          $ref: '#/components/schemas/Element'
        versionNeeded:
          description: 'This flag is used to signify that the code system does not commit to concept permanence across versions. If true, a version must be specified when referencing this code system.'
          $ref: '#/components/schemas/boolean'
        _versionNeeded:
          description: Extensions for versionNeeded
          $ref: '#/components/schemas/Element'
        content:
          description: The extent of the content of the code system (the concepts and codes it defines) are represented in this resource instance.
          enum:
            - not-present
            - example
            - fragment
            - complete
            - supplement
        _content:
          description: Extensions for content
          $ref: '#/components/schemas/Element'
        supplements:
          description: The canonical URL of the code system that this code system supplement is adding designations and properties to.
          $ref: '#/components/schemas/canonical'
        count:
          description: 'The total number of concepts defined by the code system. Where the code system has a compositional grammar, the basis of this count is defined by the system steward.'
          $ref: '#/components/schemas/unsignedInt'
        _count:
          description: Extensions for count
          $ref: '#/components/schemas/Element'
        filter:
          description: A filter that can be used in a value set compose statement when selecting concepts using a filter.
          items:
            $ref: '#/components/schemas/CodeSystem_Filter'
          type: array
        property:
          description: A property defines an additional slot through which additional information can be provided about a concept.
          items:
            $ref: '#/components/schemas/CodeSystem_Property'
          type: array
        concept:
          description: 'Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meanings of the hierarchical relationships are.'
          items:
            $ref: '#/components/schemas/CodeSystem_Concept'
          type: array
      additionalProperties: false
      required:
        - resourceType
    CodeSystem_Filter:
      description: 'The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: 'The code that identifies this filter when it is used as a filter in [[[ValueSet]]].compose.include.filter.'
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
        description:
          description: A description of how or why the filter is used.
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        operator:
          description: A list of operators that can be used with the filter.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _operator:
          description: Extensions for operator
          items:
            $ref: '#/components/schemas/Element'
          type: array
        value:
          description: A description of what the value for the filter should be.
          $ref: '#/components/schemas/string'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CodeSystem_Property:
      description: 'The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: 'A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.'
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
        uri:
          description: 'Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.'
          $ref: '#/components/schemas/uri'
        _uri:
          description: Extensions for uri
          $ref: '#/components/schemas/Element'
        description:
          description: 'A description of the property- why it is defined, and how its value might be used.'
          $ref: '#/components/schemas/string'
        _description:
          description: Extensions for description
          $ref: '#/components/schemas/Element'
        type:
          description: The type of the property value. Properties of type "code" contain a code defined by the code system (e.g. a reference to another defined concept).
          enum:
            - code
            - Coding
            - string
            - integer
            - boolean
            - dateTime
            - decimal
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CodeSystem_Concept:
      description: 'The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: A code - a text symbol - that uniquely identifies the concept within the code system.
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
        display:
          description: A human readable string that is the recommended default way to present this concept to a user.
          $ref: '#/components/schemas/string'
        _display:
          description: Extensions for display
          $ref: '#/components/schemas/Element'
        definition:
          description: 'The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.'
          $ref: '#/components/schemas/string'
        _definition:
          description: Extensions for definition
          $ref: '#/components/schemas/Element'
        designation:
          description: 'Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.'
          items:
            $ref: '#/components/schemas/CodeSystem_Designation'
          type: array
        property:
          description: A property value for this concept.
          items:
            $ref: '#/components/schemas/CodeSystem_Property1'
          type: array
        concept:
          description: Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.
          items:
            $ref: '#/components/schemas/CodeSystem_Concept'
          type: array
      additionalProperties: false
    CodeSystem_Designation:
      description: 'The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        language:
          description: The language this designation is defined for.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        use:
          description: A code that details how this designation would be used.
          $ref: '#/components/schemas/Coding'
        value:
          description: The text value for this designation.
          $ref: '#/components/schemas/string'
        _value:
          description: Extensions for value
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CodeSystem_Property1:
      description: 'The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: A code that is a reference to CodeSystem.property.code.
          $ref: '#/components/schemas/code'
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
        valueCode:
          description: The value of this property.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          description: Extensions for valueCode
          $ref: '#/components/schemas/Element'
        valueCoding:
          description: The value of this property.
          $ref: '#/components/schemas/Coding'
        valueString:
          description: The value of this property.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          description: Extensions for valueString
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: The value of this property.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          description: Extensions for valueInteger
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: The value of this property.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          description: Extensions for valueBoolean
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: The value of this property.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _valueDateTime:
          description: Extensions for valueDateTime
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: The value of this property.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          description: Extensions for valueDecimal
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Communication:
      description: 'An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.'
      properties:
        resourceType:
          description: This is a Communication resource
          enum:
            - Communication
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: 'The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.'
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: 'The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.'
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: 'An order, proposal or plan fulfilled in whole or in part by this Communication.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: Part of this action.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        inResponseTo:
          description: Prior communication that this communication is in response to.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: The status of the transmission.
          $ref: '#/components/schemas/code'
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        statusReason:
          description: Captures the reason for the current state of the Communication.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: 'The type of message conveyed such as alert, notification, reminder, instruction, etc.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        priority:
          description: 'Characterizes how quickly the planned or in progress communication must be addressed. Includes concepts such as stat, urgent, routine.'
          $ref: '#/components/schemas/code'
        _priority:
          description: Extensions for priority
          $ref: '#/components/schemas/Element'
        medium:
          description: 'A channel that was used for this communication (e.g. email, fax).'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          description: The patient or group that was the focus of this communication.
          $ref: '#/components/schemas/Reference'
        topic:
          description: 'Description of the purpose/content, similar to a subject line in an email.'
          $ref: '#/components/schemas/CodeableConcept'
        about:
          description: Other resources that pertain to this communication and to which this communication should be associated.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        encounter:
          description: The Encounter during which this Communication was created or to which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        sent:
          description: The time when this communication was sent.
          $ref: '#/components/schemas/dateTime'
        _sent:
          description: Extensions for sent
          $ref: '#/components/schemas/Element'
        received:
          description: The time when this communication arrived at the destination.
          $ref: '#/components/schemas/dateTime'
        _received:
          description: Extensions for received
          $ref: '#/components/schemas/Element'
        recipient:
          description: 'The entity (e.g. person, organization, clinical information system, care team or device) which was the target of the communication. If receipts need to be tracked by an individual, a separate resource instance will need to be created for each recipient.  Multiple recipient communications are intended where either receipts are not tracked (e.g. a mass mail-out) or a receipt is captured in aggregate (all emails confirmed received by a particular time).'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sender:
          description: 'The entity (e.g. person, organization, clinical information system, or device) which was the source of the communication.'
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: The reason or justification for the communication.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Indicates another resource whose existence justifies this communication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        payload:
          description: 'Text, attachment(s), or resource(s) that was communicated to the recipient.'
          items:
            $ref: '#/components/schemas/Communication_Payload'
          type: array
        note:
          description: 'Additional notes or commentary about the communication by the sender, receiver or other interested parties.'
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Communication_Payload:
      description: 'An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentString:
          description: 'A communicated content (or for multi-part communications, one portion of the communication).'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _contentString:
          description: Extensions for contentString
          $ref: '#/components/schemas/Element'
        contentAttachment:
          description: 'A communicated content (or for multi-part communications, one portion of the communication).'
          $ref: '#/components/schemas/Attachment'
        contentReference:
          description: 'A communicated content (or for multi-part communications, one portion of the communication).'
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    CommunicationRequest:
      description: 'A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.'
      properties:
        resourceType:
          description: This is a CommunicationRequest resource
          enum:
            - CommunicationRequest
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: A plan or proposal that is fulfilled in whole or in part by this request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        replaces:
          description: Completed or terminated request(s) whose function is taken by this new request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        groupIdentifier:
          description: 'A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.'
          $ref: '#/components/schemas/Identifier'
        status:
          description: The status of the proposal or order.
          $ref: '#/components/schemas/code'
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        statusReason:
          description: Captures the reason for the current state of the CommunicationRequest.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: 'The type of message to be sent such as alert, notification, reminder, instruction, etc.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        priority:
          description: 'Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.'
          $ref: '#/components/schemas/code'
        _priority:
          description: Extensions for priority
          $ref: '#/components/schemas/Element'
        doNotPerform:
          description: If true indicates that the CommunicationRequest is asking for the specified action to *not* occur.
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          description: Extensions for doNotPerform
          $ref: '#/components/schemas/Element'
        medium:
          description: 'A channel that was used for this communication (e.g. email, fax).'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          description: The patient or group that is the focus of this communication request.
          $ref: '#/components/schemas/Reference'
        about:
          description: Other resources that pertain to this communication request and to which this communication request should be associated.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        encounter:
          description: The Encounter during which this CommunicationRequest was created or to which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        payload:
          description: 'Text, attachment(s), or resource(s) to be communicated to the recipient.'
          items:
            $ref: '#/components/schemas/CommunicationRequest_Payload'
          type: array
        occurrenceDateTime:
          description: The time when this communication is to occur.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _occurrenceDateTime:
          description: Extensions for occurrenceDateTime
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          description: The time when this communication is to occur.
          $ref: '#/components/schemas/Period'
        authoredOn:
          description: 'For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.'
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          description: Extensions for authoredOn
          $ref: '#/components/schemas/Element'
        requester:
          description: 'The device, individual, or organization who initiated the request and has responsibility for its activation.'
          $ref: '#/components/schemas/Reference'
        recipient:
          description: 'The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sender:
          description: 'The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.'
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: Describes why the request is being made in coded or textual form.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Indicates another resource whose existence justifies this request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: 'Comments made about the request by the requester, sender, recipient, subject or other participants.'
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    CommunicationRequest_Payload:
      description: 'A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentString:
          description: 'The communicated content (or for multi-part communications, one portion of the communication).'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _contentString:
          description: Extensions for contentString
          $ref: '#/components/schemas/Element'
        contentAttachment:
          description: 'The communicated content (or for multi-part communications, one portion of the communication).'
          $ref: '#/components/schemas/Attachment'
        contentReference:
          description: 'The communicated content (or for multi-part communications, one portion of the communication).'
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Condition:
      description: 'A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.'
      properties:
        resourceType:
          description: This is a Condition resource
          enum:
            - Condition
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        clinicalStatus:
          description: The clinical status of the condition.
          $ref: '#/components/schemas/CodeableConcept'
        verificationStatus:
          description: The verification status to support the clinical status of the condition.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: A category assigned to the condition.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        severity:
          description: A subjective assessment of the severity of the condition as evaluated by the clinician.
          $ref: '#/components/schemas/CodeableConcept'
        code:
          description: 'Identification of the condition, problem or diagnosis.'
          $ref: '#/components/schemas/CodeableConcept'
        bodySite:
          description: The anatomical location where this condition manifests itself.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          description: Indicates the patient or group who the condition record is associated with.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: The Encounter during which this Condition was created or to which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        onsetDateTime:
          description: 'Estimated or actual date or date-time  the condition began, in the opinion of the clinician.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _onsetDateTime:
          description: Extensions for onsetDateTime
          $ref: '#/components/schemas/Element'
        onsetAge:
          description: 'Estimated or actual date or date-time  the condition began, in the opinion of the clinician.'
          $ref: '#/components/schemas/Age'
        onsetPeriod:
          description: 'Estimated or actual date or date-time  the condition began, in the opinion of the clinician.'
          $ref: '#/components/schemas/Period'
        onsetRange:
          description: 'Estimated or actual date or date-time  the condition began, in the opinion of the clinician.'
          $ref: '#/components/schemas/Range'
        onsetString:
          description: 'Estimated or actual date or date-time  the condition began, in the opinion of the clinician.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _onsetString:
          description: Extensions for onsetString
          $ref: '#/components/schemas/Element'
        abatementDateTime:
          description: 'The date or estimated date that the condition resolved or went into remission. This is called "abatement" because of the many overloaded connotations associated with "remission" or "resolution" - Conditions are never really resolved, but they can abate.'
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _abatementDateTime:
          description: Extensions for abatementDateTime
          $ref: '#/components/schemas/Element'
        abatementAge:
          description: 'The date or estimated date that the condition resolved or went into remission. This is called "abatement" because of the many overloaded connotations associated with "remission" or "resolution" - Conditions are never really resolved, but they can abate.'
          $ref: '#/components/schemas/Age'
        abatementPeriod:
          description: 'The date or estimated date that the condition resolved or went into remission. This is called "abatement" because of the many overloaded connotations associated with "remission" or "resolution" - Conditions are never really resolved, but they can abate.'
          $ref: '#/components/schemas/Period'
        abatementRange:
          description: 'The date or estimated date that the condition resolved or went into remission. This is called "abatement" because of the many overloaded connotations associated with "remission" or "resolution" - Conditions are never really resolved, but they can abate.'
          $ref: '#/components/schemas/Range'
        abatementString:
          description: 'The date or estimated date that the condition resolved or went into remission. This is called "abatement" because of the many overloaded connotations associated with "remission" or "resolution" - Conditions are never really resolved, but they can abate.'
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _abatementString:
          description: Extensions for abatementString
          $ref: '#/components/schemas/Element'
        recordedDate:
          description: 'The recordedDate represents when this particular Condition record was created in the system, which is often a system-generated date.'
          $ref: '#/components/schemas/dateTime'
        _recordedDate:
          description: Extensions for recordedDate
          $ref: '#/components/schemas/Element'
        recorder:
          description: Individual who recorded the record and takes responsibility for its content.
          $ref: '#/components/schemas/Reference'
        asserter:
          description: Individual who is making the condition statement.
          $ref: '#/components/schemas/Reference'
        stage:
          description: Clinical stage or grade of a condition. May include formal severity assessments.
          items:
            $ref: '#/components/schemas/Condition_Stage'
          type: array
        evidence:
          description: 'Supporting evidence / manifestations that are the basis of the Condition''s verification status, such as evidence that confirmed or refuted the condition.'
          items:
            $ref: '#/components/schemas/Condition_Evidence'
          type: array
        note:
          description: 'Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.'
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    OperationOutcome:
      description: 'A collection of error, warning, or information messages that result from a system action.'
      properties:
        resourceType:
          description: This is a OperationOutcome resource
          enum:
            - OperationOutcome
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        issue:
          description: 'An error, warning, or information message that results from a system action.'
          items:
            $ref: '#/components/schemas/OperationOutcome_Issue'
          type: array
      additionalProperties: false
      required:
        - issue
        - resourceType
    OperationOutcome_Issue:
      description: 'A collection of error, warning, or information messages that result from a system action.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        severity:
          description: Indicates whether the issue indicates a variation from successful processing.
          enum:
            - fatal
            - error
            - warning
            - information
        _severity:
          description: Extensions for severity
          $ref: '#/components/schemas/Element'
        code:
          description: 'Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.'
          enum:
            - invalid
            - structure
            - required
            - value
            - invariant
            - security
            - login
            - unknown
            - expired
            - forbidden
            - suppressed
            - processing
            - not-supported
            - duplicate
            - multiple-matches
            - not-found
            - deleted
            - too-long
            - code-invalid
            - extension
            - too-costly
            - business-rule
            - conflict
            - transient
            - lock-error
            - no-store
            - exception
            - timeout
            - incomplete
            - throttled
            - informational
        _code:
          description: Extensions for code
          $ref: '#/components/schemas/Element'
        details:
          description: Additional details about the error. This may be a text description of the error or a system code that identifies the error.
          $ref: '#/components/schemas/CodeableConcept'
        diagnostics:
          description: Additional diagnostic information about the issue.
          $ref: '#/components/schemas/string'
        _diagnostics:
          description: Extensions for diagnostics
          $ref: '#/components/schemas/Element'
        location:
          description: |-
            This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. 

            For resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be "http." + the parameter name.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _location:
          description: Extensions for location
          items:
            $ref: '#/components/schemas/Element'
          type: array
        expression:
          description: 'A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _expression:
          description: Extensions for expression
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    Parameters:
      description: 'This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.'
      properties:
        resourceType:
          description: This is a Parameters resource
          enum:
            - Parameters
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        parameter:
          description: A parameter passed to or received from the operation.
          items:
            $ref: '#/components/schemas/Parameters_Parameter'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Parameters_Parameter:
      description: 'This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.'
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: The name of the parameter (reference to the operation definition).
          $ref: '#/components/schemas/string'
        _name:
          description: Extensions for name
          $ref: '#/components/schemas/Element'
        valueBase64Binary:
          description: If the parameter is a data type.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          description: Extensions for valueBase64Binary
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: If the parameter is a data type.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          description: Extensions for valueBoolean
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: If the parameter is a data type.
          pattern: ^\S*$
          type: string
        _valueCanonical:
          description: Extensions for valueCanonical
          $ref: '#/components/schemas/Element'
        valueCode:
          description: If the parameter is a data type.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          description: Extensions for valueCode
          $ref: '#/components/schemas/Element'
        valueDate:
          description: If the parameter is a data type.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$'
          type: string
        _valueDate:
          description: Extensions for valueDate
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: If the parameter is a data type.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _valueDateTime:
          description: Extensions for valueDateTime
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: If the parameter is a data type.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          description: Extensions for valueDecimal
          $ref: '#/components/schemas/Element'
        valueId:
          description: If the parameter is a data type.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          description: Extensions for valueId
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: If the parameter is a data type.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$'
          type: string
        _valueInstant:
          description: Extensions for valueInstant
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: If the parameter is a data type.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          description: Extensions for valueInteger
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: If the parameter is a data type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueMarkdown:
          description: Extensions for valueMarkdown
          $ref: '#/components/schemas/Element'
        valueOid:
          description: If the parameter is a data type.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _valueOid:
          description: Extensions for valueOid
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: If the parameter is a data type.
          pattern: '^[1-9][0-9]*$'
          type: number
        _valuePositiveInt:
          description: Extensions for valuePositiveInt
          $ref: '#/components/schemas/Element'
        valueString:
          description: If the parameter is a data type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          description: Extensions for valueString
          $ref: '#/components/schemas/Element'
        valueTime:
          description: If the parameter is a data type.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          description: Extensions for valueTime
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: If the parameter is a data type.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _valueUnsignedInt:
          description: Extensions for valueUnsignedInt
          $ref: '#/components/schemas/Element'
        valueUri:
          description: If the parameter is a data type.
          pattern: ^\S*$
          type: string
        _valueUri:
          description: Extensions for valueUri
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: If the parameter is a data type.
          pattern: ^\S*$
          type: string
        _valueUrl:
          description: Extensions for valueUrl
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: If the parameter is a data type.
          pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          type: string
        _valueUuid:
          description: Extensions for valueUuid
          $ref: '#/components/schemas/Element'
        valueAddress:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Address'
        valueAge:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Count'
        valueDistance:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Distance'
        valueDuration:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Money'
        valuePeriod:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Period'
        valueQuantity:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Range'
        valueRatio:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Ratio'
        valueReference:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Signature'
        valueTiming:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          description: If the parameter is a data type.
          $ref: '#/components/schemas/Meta'
        resource:
          description: If the parameter is a whole resource.
          $ref: '#/components/schemas/ResourceList'
        part:
          description: A named part of a multi-part parameter.
          items:
            $ref: '#/components/schemas/Parameters_Parameter'
          type: array
      additionalProperties: false
    Patient:
      description: Demographics and other administrative information about an individual or animal receiving care or other health-related services.
      properties:
        resourceType:
          description: This is a Patient resource
          enum:
            - Patient
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: An identifier for this patient.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          description: |-
            Whether this patient record is in active use. 
            Many systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules.

            It is often used to filter patient lists to exclude inactive patients

            Deceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.
          $ref: '#/components/schemas/boolean'
        _active:
          description: Extensions for active
          $ref: '#/components/schemas/Element'
        name:
          description: A name associated with the individual.
          items:
            $ref: '#/components/schemas/HumanName'
          type: array
        telecom:
          description: A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        gender:
          description: Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          description: Extensions for gender
          $ref: '#/components/schemas/Element'
        birthDate:
          description: The date of birth for the individual.
          $ref: '#/components/schemas/date'
        _birthDate:
          description: Extensions for birthDate
          $ref: '#/components/schemas/Element'
        deceasedBoolean:
          description: Indicates if the individual is deceased or not.
          pattern: ^true|false$
          type: boolean
        _deceasedBoolean:
          description: Extensions for deceasedBoolean
          $ref: '#/components/schemas/Element'
        deceasedDateTime:
          description: Indicates if the individual is deceased or not.
          pattern: '^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$'
          type: string
        _deceasedDateTime:
          description: Extensions for deceasedDateTime
          $ref: '#/components/schemas/Element'
        address:
          description: An address for the individual.
          items:
            $ref: '#/components/schemas/Address'
          type: array
        maritalStatus:
          description: This field contains a patient's most recent marital (civil) status.
          $ref: '#/components/schemas/CodeableConcept'
        multipleBirthBoolean:
          description: Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
          pattern: ^true|false$
          type: boolean
        _multipleBirthBoolean:
          description: Extensions for multipleBirthBoolean
          $ref: '#/components/schemas/Element'
        multipleBirthInteger:
          description: Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _multipleBirthInteger:
          description: Extensions for multipleBirthInteger
          $ref: '#/components/schemas/Element'
        photo:
          description: Image of the patient.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        contact:
          description: 'A contact party (e.g. guardian, partner, friend) for the patient.'
          items:
            $ref: '#/components/schemas/Patient_Contact'
          type: array
        communication:
          description: A language which may be used to communicate with the patient about his or her health.
          items:
            $ref: '#/components/schemas/Patient_Communication'
          type: array
        generalPractitioner:
          description: Patient's nominated care provider.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        managingOrganization:
          description: Organization that is the custodian of the patient record.
          $ref: '#/components/schemas/Reference'
        link:
          description: Link to another patient resource that concerns the same actual patient.
          items:
            $ref: '#/components/schemas/Patient_Link'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Patient_Contact:
      description: Demographics and other administrative information about an individual or animal receiving care or other health-related services.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        relationship:
          description: The nature of the relationship between the patient and the contact person.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        name:
          description: A name associated with the contact person.
          $ref: '#/components/schemas/HumanName'
        telecom:
          description: 'A contact detail for the person, e.g. a telephone number or an email address.'
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        address:
          description: Address for the contact person.
          $ref: '#/components/schemas/Address'
        gender:
          description: Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          description: Extensions for gender
          $ref: '#/components/schemas/Element'
        organization:
          description: Organization on behalf of which the contact is acting or for which the contact is working.
          $ref: '#/components/schemas/Reference'
        period:
          description: The period during which this contact person or organization is valid to be contacted relating to this patient.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Patient_Communication:
      description: Demographics and other administrative information about an individual or animal receiving care or other health-related services.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        language:
          description: 'The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. "en" for English, or "en-US" for American English versus "en-EN" for England English.'
          $ref: '#/components/schemas/CodeableConcept'
        preferred:
          description: Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).
          $ref: '#/components/schemas/boolean'
        _preferred:
          description: Extensions for preferred
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - language
    Patient_Link:
      description: Demographics and other administrative information about an individual or animal receiving care or other health-related services.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        other:
          description: The other patient resource that the link refers to.
          $ref: '#/components/schemas/Reference'
        type:
          description: The type of link between this patient resource and another patient resource.
          enum:
            - replaced-by
            - replaces
            - refer
            - seealso
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - other
    PaymentNotice:
      description: 'This resource provides the status of the payment for goods and services rendered, and the request and response resource references.'
      properties:
        resourceType:
          description: This is a PaymentNotice resource
          enum:
            - PaymentNotice
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this payment notice.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The status of the resource instance.
          $ref: '#/components/schemas/code'
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        request:
          description: Reference of resource for which payment is being made.
          $ref: '#/components/schemas/Reference'
        response:
          description: Reference of response to resource for which payment is being made.
          $ref: '#/components/schemas/Reference'
        created:
          description: The date when this resource was created.
          $ref: '#/components/schemas/dateTime'
        _created:
          description: Extensions for created
          $ref: '#/components/schemas/Element'
        provider:
          description: The practitioner who is responsible for the services rendered to the patient.
          $ref: '#/components/schemas/Reference'
        payment:
          description: A reference to the payment which is the subject of this notice.
          $ref: '#/components/schemas/Reference'
        paymentDate:
          description: The date when the above payment action occurred.
          $ref: '#/components/schemas/date'
        _paymentDate:
          description: Extensions for paymentDate
          $ref: '#/components/schemas/Element'
        payee:
          description: The party who will receive or has received payment that is the subject of this notification.
          $ref: '#/components/schemas/Reference'
        recipient:
          description: The party who is notified of the payment status.
          $ref: '#/components/schemas/Reference'
        amount:
          description: The amount sent to the payee.
          $ref: '#/components/schemas/Money'
        paymentStatus:
          description: A code indicating whether payment has been sent or cleared.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - amount
        - recipient
        - payment
        - resourceType
    PaymentReconciliation:
      description: This resource provides the details including amount of a payment and allocates the payment items being paid.
      properties:
        resourceType:
          description: This is a PaymentReconciliation resource
          enum:
            - PaymentReconciliation
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          $ref: '#/components/schemas/id'
        meta:
          description: The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.'
          $ref: '#/components/schemas/uri'
        _implicitRules:
          description: Extensions for implicitRules
          $ref: '#/components/schemas/Element'
        language:
          description: The base language in which the resource is written.
          $ref: '#/components/schemas/code'
        _language:
          description: Extensions for language
          $ref: '#/components/schemas/Element'
        text:
          description: 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
          $ref: '#/components/schemas/Narrative'
        contained:
          description: 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.'
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this payment reconciliation.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The status of the resource instance.
          $ref: '#/components/schemas/code'
        _status:
          description: Extensions for status
          $ref: '#/components/schemas/Element'
        period:
          description: The period of time for which payments have been gathered into this bulk payment for settlement.
          $ref: '#/components/schemas/Period'
        created:
          description: The date when the resource was created.
          $ref: '#/components/schemas/dateTime'
        _created:
          description: Extensions for created
          $ref: '#/components/schemas/Element'
        paymentIssuer:
          description: The party who generated the payment.
          $ref: '#/components/schemas/Reference'
        request:
          description: Original request resource reference.
          $ref: '#/components/schemas/Reference'
        requestor:
          description: The practitioner who is responsible for the services rendered to the patient.
          $ref: '#/components/schemas/Reference'
        outcome:
          description: The outcome of a request for a reconciliation.
          enum:
            - queued
            - complete
            - error
            - partial
        _outcome:
          description: Extensions for outcome
          $ref: '#/components/schemas/Element'
        disposition:
          description: A human readable description of the status of the request for the reconciliation.
          $ref: '#/components/schemas/string'
        _disposition:
          description: Extensions for disposition
          $ref: '#/components/schemas/Element'
        paymentDate:
          description: The date of payment as indicated on the financial instrument.
          $ref: '#/components/schemas/date'
        _paymentDate:
          description: Extensions for paymentDate
          $ref: '#/components/schemas/Element'
        paymentAmount:
          description: Total payment amount as indicated on the financial instrument.
          $ref: '#/components/schemas/Money'
        paymentIdentifier:
          description: Issuer's unique identifier for the payment instrument.
          $ref: '#/components/schemas/Identifier'
        detail:
          description: Distribution of the payment amount for a previously acknowledged payable.
          items:
            $ref: '#/components/schemas/PaymentReconciliation_Detail'
          type: array
        formCode:
          description: A code for the form to be used for printing the content.
          $ref: '#/components/schemas/CodeableConcept'
        processNote:
          description: A note that describes or explains the processing in a human readable form.
          items:
            $ref: '#/components/schemas/PaymentReconciliation_ProcessNote'
          type: array
      additionalProperties: false
      required:
        - paymentAmount
        - resourceType
    PaymentReconciliation_Detail:
      description: This resource provides the details including amount of a payment and allocates the payment items being paid.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique identifier for the current payment item for the referenced payable.
          $ref: '#/components/schemas/Identifier'
        predecessor:
          description: Unique identifier for the prior payment item for the referenced payable.
          $ref: '#/components/schemas/Identifier'
        type:
          description: Code to indicate the nature of the payment.
          $ref: '#/components/schemas/CodeableConcept'
        request:
          description: 'A resource, such as a Claim, the evaluation of which could lead to payment.'
          $ref: '#/components/schemas/Reference'
        submitter:
          description: The party which submitted the claim or financial transaction.
          $ref: '#/components/schemas/Reference'
        response:
          description: 'A resource, such as a ClaimResponse, which contains a commitment to payment.'
          $ref: '#/components/schemas/Reference'
        date:
          description: The date from the response resource containing a commitment to pay.
          $ref: '#/components/schemas/date'
        _date:
          description: Extensions for date
          $ref: '#/components/schemas/Element'
        responsible:
          description: A reference to the individual who is responsible for inquiries regarding the response and its payment.
          $ref: '#/components/schemas/Reference'
        payee:
          description: The party which is receiving the payment.
          $ref: '#/components/schemas/Reference'
        amount:
          description: The monetary amount allocated from the total payment to the payable.
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - type
    PaymentReconciliation_ProcessNote:
      description: This resource provides the details including amount of a payment and allocates the payment items being paid.
      properties:
        id:
          description: Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.'
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The business purpose of the note text.
          enum:
            - display
            - print
            - printoper
        _type:
          description: Extensions for type
          $ref: '#/components/schemas/Element'
        text:
          description: The explanation or description associated with the processing.
          $ref: '#/components/schemas/string'
        _text:
          description: Extensions for text
          $ref: '#/components/schemas/Element'
      additionalProperties: false
  parameters:
    rid:
      name: rid
      in: path
      description: id of the resource (=Resource.id)
      required: true
      allowEmptyValue: false
      style: simple
      schema:
        type: string
    hid:
      name: hid
      in: path
      description: id of the history entry (=Resource.meta.versionId)
      required: true
      allowEmptyValue: false
      style: simple
      schema:
        type: string
    summary:
      name: _summary
      in: query
      description: Requests the server to return a designated subset of the resource
      allowEmptyValue: true
      style: form
      schema:
        type: string
        enum:
          - 'true'
          - text
          - data
          - count
          - 'false'
    format:
      name: _format
      in: query
      description: 'Specify alternative response formats by their MIME-types (when a client is unable acccess accept: header)'
      allowEmptyValue: true
      style: form
      schema:
        type: string
        format: mime-type
    pretty:
      name: _pretty
      in: query
      description: Ask for a pretty printed response for human convenience
      allowEmptyValue: true
      style: form
      schema:
        type: boolean
    elements:
      name: _elements
      in: query
      description: Requests the server to return a collection of elements from the resource
      allowEmptyValue: true
      style: form
      explode: false
      schema:
        type: array
        format: string
        items:
          format: string
    count:
      name: _count
      in: query
      description: 'The maximum number of search results on a page. The server is not bound to return the number requested, but cannot return more'
      schema:
        type: number
